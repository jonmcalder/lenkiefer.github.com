labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2014.")+
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2014.",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=6))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
myplot(5)
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=6))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 6))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
mydata[,upb.gt1m:=ifelse(upb>1000000,1,0)]
mydata[,sum(upb.gt1m),by=msamd_name]
mydata[fips.state=5,sum(upb.gt1m),by=msamd_name]
mydata[fips.state==5,sum(upb.gt1m),by=msamd_name]
mydata[sum(upb.gt1m),by=msamd_name]
mydata[,sum(upb.gt1m),by=msamd_name]
mydata[,sum(upb.gt1m),by=list(fips.state,msamd_name)]
names(mydata)
mydata[state_abbr=="CA",][,sum(upb.gt1m),by=list(fips.state,msamd_name)]
mydata[state_abbr=="CA",sum(upb.gt1m),by=list(fips.state,msamd_name)]
mydata[state_abbr=="CA",sum(upb.gt1m),by=msamd_name]
mydata[state_abbr=="CA",list(.N,sum(upb.gt1m)),by=msamd_name]
mydata[state_abbr=="CA",list(.N,gt1m=sum(upb.gt1m)),by=msamd_name]
ca.sums<-mydata[state_abbr=="CA",list(.N,gt1m=sum(upb.gt1m)),by=msamd_name]
ca.sums
ggplot(data=ca.sums(x=gt1m/N,y=reorder(msamd_name,gt1m/N)))+geom_point()
ggplot(data=ca.sums,aes(x=gt1m/N,y=reorder(msamd_name,gt1m/N)))+geom_point()
ggplot(data=ca.sums,aes(x=gt1m/N,y=reorder(msamd_name,gt1m/N)))+geom_bar(stat=identity,aes(color=gt1m/N))+
scale_color_viridis()
ggplot(data=ca.sums,aes(x=gt1m/N,y=reorder(msamd_name,gt1m/N)))+geom_bar(stat="identity",aes(color=gt1m/N))+
scale_color_viridis()
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+geom_bar(stat="identity",aes(color=gt1m/N))+
scale_color_viridis()+coord_flip()
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_color_viridis(,direction=-1,end=0.95)+coord_flip()
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_color_viridis(direction=-1,end=0.95)+coord_flip()
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minmal()+
geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_y_continuous(label=percent)+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.",
)
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+
geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_y_continuous(label=percent)+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_y_continuous(label=percent)+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+
scale_y_continuous(label=percent)+theme(plot.caption=element_text(hjust=0))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+    theme(axis.text.x = element_text(size=6))+
scale_y_continuous(label=percent)+theme(plot.caption=element_text(hjust=0))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+    theme(axis.text.y = element_text(size=6))+
scale_y_continuous(label=percent)+theme(plot.caption=element_text(hjust=0))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+    theme(axis.text.y = element_text(size=8))+
scale_y_continuous(label=percent)+theme(plot.caption=element_text(hjust=0))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+    theme(axis.text.y = element_text(size=7))+
scale_y_continuous(label=percent)+theme(plot.caption=element_text(hjust=0))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for 1-4 family dwellings originated in 2015.")
ca.sums
1293/8550
ggplot(data=ca.sums,aes(y=gt1m/N,x=reorder(msamd_name,gt1m/N)))+
theme_minimal()+theme(legend.position="none")+
geom_bar(stat="identity",aes(fill=gt1m/N))+    theme(axis.text.y = element_text(size=7))+
scale_y_continuous(label=percent)+theme(plot.caption=element_text(hjust=0))+
scale_fill_viridis(direction=-1,end=0.95)+coord_flip()+
labs(y="Share of loans",x="",
title="Share of mortgage loans with loan amount greater than $1 Million",
subtitle="Home purchase, home improvement and refinance loans on 1-4 family dwellings",
caption="@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase, home improvement, and refinance loans for\n1-4 family dwellings originated in 2015.")
fips.look3
myplot(48)
st.list
myplot(42)
tx.sums<-mydata[state_abbr=="TX",list(.N,gt1m=sum(upb.gt1m)),by=msamd_name]
tx.sums
tx.sums[,sum(gt1m)/sum(N)]
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
rm(mydata)
rm(cmap)
rm(cmap.all)
rm(county.sums)
rum(county.sum)
rm(mydata.conc)
rm(pdata)
rm(pd)
rm(pdata2)
rm(pdata3)
rm(popDFR)
rm(popDF)
rm(c.sums)
rm(county.sum)
rm(dt)
rm(poDF.i)
rm(popDF.i)
rm(smap)
rm(shareDF)
rm(shareDF.i)
rm(smapl.all)
rm(smap.all)
rm(pmms30yr)
rm(lend.shares)
rm(lender.tot)
rm(fips.look)
rm(fips.look2)
rmi(fips.look3)
rm(running.totals)
rm(fips.look3)
exit
exit()
