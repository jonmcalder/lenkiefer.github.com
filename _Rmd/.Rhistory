breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000")
)
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold', family = 'Tahoma') +
theme_map(base_family = 'Tahoma', base_size = 14) +
coord_equal() +
theme(legend.position = 'top',
legend.key = element_blank()) +
scale_fill_viridis(name="Median Value\nlog scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
,title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold') +
theme_map( base_size = 14) +
coord_equal() +
theme(legend.position = 'top',
legend.key = element_blank()) +
scale_fill_viridis(name="Median Value\nlog scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
,title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold') +
theme_map( base_size = 14) +
coord_equal() +
theme(legend.position = 'top',
legend.key = element_blank()) +
scale_fill_viridis(name="Median Value\nlog scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold') +
theme_map( base_size = 14) +
coord_equal() +
theme(legend.position = 'top',
legend.key = element_blank()) +
scale_fill_viridis(name="",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold') +
theme_map( base_size = 14) +
coord_equal() +
theme(legend.position = 'right',
legend.key = element_blank()) +
scale_fill_viridis(name="",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold') +
theme_map( base_size = 14) +
coord_equal() +
theme(legend.position = 'right',
legend.key = element_blank()) +
scale_fill_viridis(name="",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")    +
theme(plot.caption=element_text(hjust=0))
?bind_rows
zips
over
?over
?counties
st.list
st.list
zdata
unique(zdata$State)
st.list<-unique(zdata$State) #list of all states
i<-4
ctys <- counties(st.list[i], cb = TRUE)
ctys
theme(plot.subtitle=element_text(color="red"))+
#labels:
labs(y="Percent of homeowners underwater", x="",
caption="@lenkiefer Source: Zillow Negative Equity Report (2016Q1)",
subtitle=unique(dtf[.frame==i]$RegionName),
title="Negative Equity by State")
print(g)
ani.pause()
library(readxl)
library(data.table)
library(dplyr)
library(tidyr)
library('ggbeeswarm')
library(viridis)
library(ggplot2)
library(scales)
library(ggthemes)
library(tweenr)
library(purrr)
library(animation)
library(acs)
library(dplyr)
library(reshape2)
library(stringr)
library(ggplot2)
library(ggthemes)
library(ggalt)
library(scales)
library(rgeos)
library(maptools)
library(albersusa)
library(broom)
library(ineq) #used for concentration indices
path<-C:\Users\Leonard\Documents\Data Viz\blog\pophousinghpa
path<-"C:/Users/Leonard/Documents/Data Viz/blog/geo/"
popDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="c2010_hist_pops")
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
popDF<-popDF %>% gather(year.of,"pop",5:27)
popDF<-mutate(popDF,year=ifelse(substr(year.of,1,1)=="e",substr(year.of,5,9),substr(year.of,4,8)))
popDF<-data.table(popDF)
popDF<-rename(popDF,fips=GEOID10 )
dt<-data.table(popDF)
dt[,sum(pop),by=year]
states<-usa_composite()
smap<-fortify(states,region="fips_state")
smap.all<-smap
counties <- counties_composite()
#get data:
counties@data <- left_join(counties@data, popDF.i, by = "fips")
counties@data <- left_join(counties@data, shareDF.i, by = "fips")
cmap <- fortify(counties_composite(), region="fips")
cmap$state<-substr(cmap$id,1,2)
cmap$county<-substr(cmap$id,3,5)
cmap$fips<-paste0(cmap$state,cmap$county)
cmap.all<-cmap
mycaption<-"@lenkiefer Source: Schroeder, Jonathan P. (2016). Historical Population Estimates for 2010 U.S. States, Counties and Metro/Micro Areas, 1790-2010. Retrieved from the Data Repository for the University of Minnesota, http://doi.org/10.13020/D6XW2H."
mycaption <- paste0(strwrap(mycaption, 130), sep="", collapse="\n")
#total counts map:
ggplot() +
geom_map(data = cmap.all, map = cmap.all,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap.all,
aes(fill =log(pop), map_id = fips),
color = NA) +
geom_map(data = smap.all, map = smap.all,
aes(x = long, y = lat, map_id = id),
color = "gray", size = .25, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15))) +
coord_proj(us_laea_proj) +   labs(title="",subtitle="" ) +
scale_fill_viridis(name = "Population", discrete=F,option="D",end=0.95,direction=-1)+
theme(legend.position = "none") +theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
labs(x="Population in 2014 (log scale)",y="",
#subtitle="Each dot represents 1 county",
title="County Population Distribution",
caption="@lenkiefer Source: TBD")
y.list<-unique(popDF$year)
yy<-y.list[1]
yy<-"1900"
popDF.i<-subset(popDF,year==yy)
shareDF.i<-subset(shareDF,year==yy)
#shareDF.i<-shareDF.i[,c(fips,share)]
shareDF.i<-data.table(shareDF.i)[,list(fips,share)]
counties <- counties_composite()
#get data:
counties@data <- left_join(counties@data, popDF.i, by = "fips")
counties@data <- left_join(counties@data, shareDF.i, by = "fips")
shareDF
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
head(shareDF)
library(dplyr)
shareDF<-rename(shareDF,fips=GEOID10 )
names(shareDF)
rename(shareDF,fips=GEOID10)
rename(shareDF,fips=GEOID10)
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
#shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
names(shareDF)
?rename
popDF<-popDF %>% gather(year.of,"pop",5:27)
popDF<-mutate(popDF,year=ifelse(substr(year.of,1,1)=="e",substr(year.of,5,9),substr(year.of,4,8)))
popDF<-data.table(popDF)
library(ggplot2)
library(animation)
library(stringr)
library(data.table)
library(tweenr)
library(purrr)
library(dplyr)
setwd("C:/Users/Leonard/Documents/Data Viz/blog/blsjobs")
#get unemployment data
#indy_code	indy_text
#0000	All Industries
#0169	Agriculture, forestry, fishing, and hunting
#0368	Nonagriculture industries
# 0369	Mining, quarrying, and oil and gas extraction
# 0569	Utilities
# 0770	Construction
# 1068	Nondurable goods manufacturing
# 2467	Manufacturing
# 2468	Durable goods manufacturing
# 4067	Wholesale and retail trade
# 4068	Wholesale trade
# 4669	Retail trade
# 6068	Transportation and utilities
# 6069	Transportation and warehousing
# 6468	Information
# 6469	Publishing, except Internet
# 6569	Motion pictures and sound recording industries
# 6670	Radio and television broadcasting and cable subscriptions programming
# 6679	Telecommunications
# 6769	Other information services
# 6867	Financial activities
# 6868	Finance and insurance
# 6869	Finance
# 6990	Insurance carriers and related activities
# 7069	Real estate and rental and leasing
ln.series<-fread("http://download.bls.gov/pub/time.series/ln/ln.series")
ln.data<-fread("http://download.bls.gov/pub/time.series/ln/ln.data.1.AllData")
ln.indy<-fread("http://download.bls.gov/pub/time.series/ln/ln.indy")
my.indy<-fread("indcodeslu.txt")
my.indy2<-fread("indcodesjolts.txt")
my.indy3<-merge(my.indy2,my.indy,by.x="industry_text",by.y="indy_text")
#my.series<-ln.series[indy_code %in% my.indy$indy_code &                       ages_code==0 & education_code==0 & duration_code==0 &                       ]
my.series<-ln.series[grepl("Unemployment Rate",series_title) & indy_code !=0,]
my.series<-ln.series[(grepl("Unemployment Rate",series_title) & indy_code !=0 & indy_code %in% my.indy3$indy_code
& ages_code==0 & periodicity_code=="M" &  sexs_code==0) | series_id=="LNU04000000",]
ln.data2<-ln.data[year>1999 & series_id %in% my.series$series_id,]
ln.data2<-merge(ln.data2,my.series[,list(series_id,indy_code)],by="series_id",all.x=T)
ln.data2 <-merge(ln.data2,my.indy3[,list(indy_code,industry_text),],by="indy_code",all.x=T)
ln.data2<-dplyr::rename(ln.data2,ur=value)
#get jolts data
jolts.dt<-fread("http://download.bls.gov/pub/time.series/jt/jt.data.1.AllItems")
jolts.series<-fread("http://download.bls.gov/pub/time.series/jt/jt.series")
jolts.ind<-fread("http://download.bls.gov/pub/time.series/jt/jt.industry",
col.names=c("industry_code","industry_text",	"display_level",	"selectable","sort_sequence","blank"))
jolts.element<-fread("http://download.bls.gov/pub/time.series/jt/jt.dataelement",
col.names=c("dataelement_code","dataelement_text","display_level","selectable","sort_sequence","blank"                     ))
jolts.series[industry_code %in% my.indy3 & seasonal==seasonal.v & dataelement_code==elem.v &
ratelevel_code==ratelevel.v & region_code==00, ]
my.series<-jolts.series[( industry_code %in% my.indy3$industry_code &
dataelement_code=="JO" &
seasonal=="U"  & ratelevel_code=="R" & region_code=="00") | series_id=="JTU00000000JOR", ]
jolts.dt2<-jolts.dt[series_id %in% my.series$series_id,]
jolts.dt2<-merge(jolts.dt2,my.series[,list(series_id,industry_code),],by="series_id")
jolts.dt2 <-merge(jolts.dt2,my.indy3[,list(industry_code,industry_text),],by="industry_code",all.x=T)
jolts.dt2<-dplyr::rename(jolts.dt2,jo=value)
all.dt<-merge(ln.data2[,list(year,period,ur,industry_text,indy_code)],
jolts.dt2[,list(year,period,jo,industry_text,industry_code)],
by=c("year","period","industry_text"))
all.dt$ur<-as.numeric(all.dt$ur)
all.dt[industry_code==0,industry_text:="All Industries"]
all.dt[,month:=as.numeric(substr(period,2,3))]
all.dt[,date:= as.Date(ISOdate(year,month,1))]
all.dt
htmlTable(head(all.dt), col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
tfoot="&dagger;c2010_hist_pops worksheet")
library(htmlTable)
htmlTable(head(all.dt), col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
tfoot="&dagger;c2010_hist_pops worksheet")
all.dt[, recession:="Expansion"]
all.dt[ (date>"2001-02-28" & date<="2001-12-01") |
(date>"2007-10-31" & date<="2009-06-30"),
recession:="Recession" ]
htmlTable(head(all.dt), col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
tfoot="&dagger;Source: U.S> Bureau of Labor Statistics")
ggplot(data=all.dt[period=="M07",],aes(x=ur,y=jo))+geom_point()+facet_wrap(~industry_text,scales="free")+
geom_text(aes(label=year))
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~industry_text)+
theme(plot.caption=element_text(hjust=0,size=7))+theme_minimal()+
theme(legend.position="top")+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
library(viridis)
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~industry_text)+
theme(plot.caption=element_text(hjust=0,size=7))+theme_minimal()+
theme(legend.position="top")+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
all.dt$ind.textf<-factor(all.dt$industry_text,levels=unique(all.dt$industry_text))
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~ind.textf)+
theme_minimal()+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(legend.position="none")+
theme(legend.position = c(0.85, 0.075) )+
geom_point(data=all.dt[ date=="2016-07-01"],shape=21,size=3,color=viridis(3)[1])+
geom_text(data=all.dt[  date=="2016-07-01"],size=2,color=viridis(3)[1],label="July, 2016\n\n")+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
all.dt$ind.textf<-factor(all.dt$industry_text,levels=unique(all.dt$industry_text))
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~ind.textf)+
theme_minimal()+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(legend.position="none")+
theme(legend.position = c(0.85, 0.075) )+
geom_point(data=all.dt[ date=="2016-07-01"],shape=21,size=3,color=viridis(3)[1])+
geom_text(data=all.dt[  date=="2016-07-01"],size=2,color=viridis(3)[1],label="July, 2016\n\n")+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
htmlTable(all.dt[ date=="2016-07-01",], col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
tfoot="Source: U.S. Bureau of Labor Statistics")
htmlTable(all.dt[ date=="2016-07-01", list(year,period,industry_text,indy_code,industry_code,ur,jo)], col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
tfoot="Source: U.S. Bureau of Labor Statistics")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
htmlTable(all.dt[ date=="2016-07-01", list(year,period,industry_text,indy_code,industry_code,ur,jo)], col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
header = c("Year ","period ","industry","industry code (CPS)","industry code (JOLTS","Unemployment Rate ","Job Openings Rate"),
tfoot="Source: U.S. Bureau of Labor Statistics\ndata are not seasonally adjusted")
htmlTable(all.dt[ date=="2016-07-01", list(year,period,industry_text,indy_code,industry_code,ur,jo)], col.rgroup = c("none", "#F7F7F7"),caption="Merged Table",
header = c("Year ","Period ","industry","Industry\ncode (CPS)","Industry\ncode (JOLTS)","Unemployment\nRate ","Job Openings\nRate"),
tfoot="Source: U.S. Bureau of Labor Statistics\ndata are not seasonally adjusted")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~ind.textf)+
theme_minimal()+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(legend.position="none")+
theme(legend.position = c(0.85, 0.075) )+
#Let's circle the last available point:
geom_point(data=all.dt[ date=="2016-07-01"],shape=21,size=3,color=viridis(3)[1])+
geom_text(data=all.dt[  date=="2016-07-01"],size=2,color=viridis(3)[1],label="July, 2016\n\n")+
theme(strip.text.x = element_text(size = 7)+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
)
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~ind.textf)+
theme_minimal()+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(legend.position="none")+
theme(legend.position = c(0.85, 0.075) )+
#Let's circle the last available point:
geom_point(data=all.dt[ date=="2016-07-01"],shape=21,size=3,color=viridis(3)[1])+
geom_text(data=all.dt[  date=="2016-07-01"],size=2,color=viridis(3)[1],label="July, 2016\n\n")+
theme(strip.text.x = element_text(size = 7))+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~ind.textf)+
theme_minimal()+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(legend.position="none")+
theme(legend.position = c(0.85, 0.075) )+
#Let's circle the last available point:
geom_point(data=all.dt[ date=="2016-07-01"],shape=21,size=3,color=viridis(3)[1])+
geom_text(data=all.dt[  date=="2016-07-01"],size=2,color=viridis(3)[1],label="July, 2016\n\n")+
theme(strip.text.x = element_text(size = 8))+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=all.dt,aes(x=ur,y=jo,color=recession))+geom_point(alpha=0.25)+facet_wrap(~ind.textf,ncol=4)+
theme_minimal()+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(legend.position="none")+
theme(legend.position = c(0.85, 0.075) )+
#Let's circle the last available point:
geom_point(data=all.dt[ date=="2016-07-01"],shape=21,size=3,color=viridis(3)[1])+
geom_text(data=all.dt[  date=="2016-07-01"],size=2,color=viridis(3)[1],label="July, 2016\n\n")+
theme(strip.text.x = element_text(size = 8))+
scale_color_manual(name="Recession or\nExpansion",values=c(viridis(5)[4],magma(5)[3]))+
labs(x="Unemployment Rate (%, NSA)",y="Job Openings Rate (%, NSA)",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (NSA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Openings and Labor Turnover Survey")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
getwd()
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
my.indy
my.indy2
my.indy3
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
