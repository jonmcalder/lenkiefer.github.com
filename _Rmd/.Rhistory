# Create a summary file that has total UPB (upb), median loan amount (upb.med), and count of loans (count)
county.sum<-mydata[,list(upb=sum(upb),upb.med=median(upb),count=.N), by=list(fips,state_abbr,state_name,county_name,msamd_name)]
st.list<-unique(mydata[st.fips !="72",]$st.fips)
# The next step is to make a function that generates the composite plot based on a state FIPS number:
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nEach dot represents one originated loan in 2014 (1,000 loans randomly sampled for plot)",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
myplot(5)
i
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
fips.look
fips.look<-fread("http://www2.census.gov/geo/docs/reference/codes/files/national_county.txt",
col.names=c("state_abbr","st.fips","county.fips","county_name","CLASSFP"),head=F)
fips.look<-fips.look[,fips := str_c(str_pad(st.fips, 2, "left", "0"),str_pad(county.fips, 3, "left", "0"))]
#create merged state + county variable
fips.look<-fips.look[,c.name:=str_c(state_abbr,":",county_name)]
#get rid of extra columns
fips.look<-fips.look[,list(fips,c.name)]
fips.look
fips.look<-fips.look[,fips := str_c(str_pad(st.fips, 2, "left", "0"),str_pad(county.fips, 3, "left", "0"))]
fips.look<-fread("http://www2.census.gov/geo/docs/reference/codes/files/national_county.txt",
col.names=c("state_abbr","st.fips","county.fips","county_name","CLASSFP"),head=F)
fips.look<-fips.look[,fips := str_c(str_pad(st.fips, 2, "left", "0"),str_pad(county.fips, 3, "left", "0"))]
fips.look
fips.look
fips.look<-fips.look[,c.name:=str_c(state_abbr,":",county_name)]
#get rid of extra columns
fips.look<-fips.look[,list(fips,c.name)]
fips.look
fips.look<-fread("http://www2.census.gov/geo/docs/reference/codes/files/national_county.txt",
col.names=c("state_abbr","st.fips","county.fips","county_name","CLASSFP"),head=F)
fips.look<-fips.look[,fips := str_c(str_pad(st.fips, 2, "left", "0"),str_pad(county.fips, 3, "left", "0"))]
#create merged state + county variable
fips.look<-fips.look[,c.name:=str_c(state_abbr,":",county_name)]
#get rid of extra columns for merge
fips.look2<-fips.look[,list(fips,c.name)]
#merge fips numbers back onto data
mydata<-merge(mydata,fips.look2,by="c.name")
#add state code, will be useful for labeling
mydata<-mydata[,st.fips:=substr(fips,1,2)]
mydata<-mydata[,county.fips:=substr(fips,3,5)]
# loan amounts read as character variable, scaled in $1000s, create upb variable in $s and numeric
mydata$upb<-as.numeric(mydata$loan_amount_000s)*1000
# Create a summary file that has total UPB (upb), median loan amount (upb.med), and count of loans (count)
county.sum<-mydata[,list(upb=sum(upb),upb.med=median(upb),count=.N), by=list(fips,state_abbr,state_name,county_name,msamd_name)]
```
Now that we've loaded our data and summarized it, let's load some maps.
```{r ,fig-setup-2, warning=FALSE, eval=F,cache=TRUE,echo=TRUE, message=FALSE,fig.height=5,fig.width=7 }
# Let's load some maps:
states<-usa_composite()  #create a state map thing
smap<-fortify(states,region="fips_state")
smap.all<-smap           #we're going to subset smap later, so copy full map
counties <- counties_composite()   #create a county map thing
#add on summary stats by county using FIPS code
counties@data <- left_join(counties@data, county.sum, by = "fips")
cmap <- fortify(counties_composite(), region="fips")
#create state and county FIPS codes
cmap$state<-substr(cmap$id,1,2)
cmap$county<-substr(cmap$id,3,5)
cmap$fips<-paste0(cmap$state,cmap$county)
cmap.all<-cmap    #we're going to subset cmap later, so copy full map
st.list<-unique(mydata[st.fips !="72",]$st.fips)
st.list
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nEach dot represents one originated loan in 2014 (1,000 loans randomly sampled for plot)",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
fips.look
g3
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nEach dot represents one originated loan in 2014 (1,000 loans randomly sampled for plot)",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
i
i<-5
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
c.list
st.label
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)
st.list
c.list
head(mydata)
mydata <- fread("~/data/hmda_lar.csv")
source('~/code/multiplot.R')
# function for combining graphs see: http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
#data stuff
#trim columns off data
mydata<-mydata[,list(state_name,state_abbr,county_name,loan_amount_000s,loan_purpose_name,loan_type_name,
applicant_income_000s,lien_status_name,msamd_name)]
#create merged state + county variable
mydata<-mydata[, c.name:=str_c(state_abbr,":",county_name)]
#get fips lookup: from census
fips.look<-fread("http://www2.census.gov/geo/docs/reference/codes/files/national_county.txt",
col.names=c("state_abbr","st.fips","county.fips","county_name","CLASSFP"),head=F)
fips.look<-fips.look[,fips := str_c(str_pad(st.fips, 2, "left", "0"),str_pad(county.fips, 3, "left", "0"))]
#create merged state + county variable
fips.look<-fips.look[,c.name:=str_c(state_abbr,":",county_name)]
#get rid of extra columns for merge
fips.look2<-fips.look[,list(fips,c.name)]
#merge fips numbers back onto data
mydata<-merge(mydata,fips.look2,by="c.name")
head(mydata)
# First step is to get a list of states (we'll exclude FIPS code 72: Puerto Rico)
st.list<-unique(mydata[st.fips !="72",]$st.fips)
# The next step is to make a function that generates the composite plot based on a state FIPS number:
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nEach dot represents one originated loan in 2014 (1,000 loans randomly sampled for plot)",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
i
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
st.label
head(cmap)
c.list
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)
str(mydata)
head(mydata)
mydata<-mydata[,st.fips:=substr(fips,1,2)]
mydata<-mydata[,county.fips:=substr(fips,3,5)]
# loan amounts read as character variable, scaled in $1000s, create upb variable in $s and numeric
mydata$upb<-as.numeric(mydata$loan_amount_000s)*1000
#test map 2:
ggplot() +
geom_map(data = cmap.all, map = cmap.all,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap.all,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
#add black state borders (just to see if things are working)
geom_map(data = smap.all, map = smap.all,
aes(x = long, y = lat, map_id = id),
color = "black", size = .5, fill = NA) +
theme_map(base_size = 12) +
theme(plot.title=element_text(size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(title="Median loan amount by county in 2014",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nIncludes all home purchase and refinance loans for 1-4 family dwellings and manufactured housing originated in 2014.")+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
# First step is to get a list of states (we'll exclude FIPS code 72: Puerto Rico)
st.list<-unique(mydata[st.fips !="72",]$st.fips)
# The next step is to make a function that generates the composite plot based on a state FIPS number:
myplot<-function(i){
c.list<-unique(mydata[st.fips ==st.list[i]]$fips)  # all counties within selected state [i]
smap<-subset(smap.all, id %in% st.list[i])         # subset state map
cmap<-subset(cmap.all, fips %in% c.list)           # subset county map
#state label
st.label<-unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)
# graph 1: map (as above, but only including subset)
g1<-
ggplot() +
geom_map(data = cmap, map = cmap,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap,
aes(fill =log(upb.med), map_id = fips),
color = NA) +
geom_map(data = smap, map = smap,
aes(x = long, y = lat, map_id = id),
color = "black", size = 1.05, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15),hjust=0)) +
coord_proj(us_laea_proj) +
labs(y="Loan Amount, $",x="Loan Purpose",
title=paste("Median loan amount by county in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
scale_fill_viridis(name="Median Loan Amount\n$, log scale\n",
discrete=F,option="D",end=0.95,direction=-1,limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10,000","$100,000","$1,000,000")  )+  theme(legend.position = "right")
#plot data:
# Prepare data: select only data in the state (derived from c.list)
pdata<-county.sum[fips %in% c.list]
pdata2<-mydata[fips %in% c.list,.SD[sample(.N,min(.N,1000))],by = msamd_name ]  #subsample metro data
# See note: sample by groups
# http://stackoverflow.com/questions/27325656/how-do-you-sample-groups-in-a-data-table-with-a-caveat
pdata2[msamd_name=="",msamd_name:="Non-metro"]  #rename missing metros to "Non-Metro"
# pdata2[,.N,by=msamd_name]    # Can run this to check how many obs we have per metro
pdata3<-mydata[fips %in% c.list][sample(.N,1000)]  #subsample state data
# graph 2: upb distribution for entire state
g2<-
ggplot(data=pdata2,aes(y="",x=upb,color=log(upb)))+
geom_quasirandom(alpha=0.5,size=0.35)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k") ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
caption="\n@lenkiefer Source: CFPB, FFIEC, Home Mortgage Disclosure Act (HMDA) data\nEach dot represents one originated loan in 2014 (1,000 loans randomly sampled for plot)",
title=paste("Loan size distribution by Metro in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
theme(axis.text.x = element_text(size=4))+
facet_wrap(~msamd_name)+theme(strip.text.x = element_text(size = 4))
# graph 3: upb distribution by county (using a subsample of 1000 obs)
g3<-
ggplot(data=pdata3,aes(y="",x=upb,color=log(upb)))+geom_quasirandom(alpha=0.5,size=0.75)+
theme_minimal()+
scale_color_viridis(name="Loan Amount\n$,log scale\n",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1.4e6)),
breaks=c(log(10000),log(100000),log(1e6)),
labels=c("$10k","$100k","$1,000k")                      ) +
scale_x_log10(limits=c(10000,1.4e6),breaks=c(10000,100000,1000000),
labels=c("$10k","$100k","$1,000k") )+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "none")+
labs(y="",x="Loan Amount ($, log scale)",
title=paste("Mortgage loan size distribution in",
unique(fips.look[st.fips==as.numeric(st.list[i])]$state_abbr)))+
facet_wrap(~state_name)
m<-multiplot(g1,g2,g3,layout=matrix(c(1,3,2,2,2,2), nrow=3, byrow=TRUE))
# I've source the multiplot function above, and you can find it at:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
}
# Try it out for California:
myplot(5)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
