files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
datatable(
cbind(' ' = '&bigtriangledown;',subset(dt,country.etc !="NA")), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,7,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
library(DT)
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,7,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,7,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
dt[order(st)]
dt[order(state)]
names(dt)
library(DT)
library(maps)
#source("../multiplot.R")
data(us.cities) # from the package maps
cbsa.data <-fread("C:/Users/Leonard/Documents/Data Viz/blog/geo/cbsa.city.txt")
library(data.table
)
library(DT)
library(maps)
#source("../multiplot.R")
data(us.cities) # from the package maps
cbsa.data <-fread("C:/Users/Leonard/Documents/Data Viz/blog/geo/cbsa.city.txt")
cbsa.metro<-cbsa.data[metro.micro=="Metropolitan Statistical Area"]
#create lowercase names
cbsa.metro[,nameL:=tolower(name)]
us.cities<-data.table(us.cities)[,nameL:=tolower(name)]
d<-merge(cbsa.metro,us.cities,by="nameL")
#get rid of duplicates
# see: http://stackoverflow.com/questions/15776064/r-first-observation-by-group-using-data-table-self-join
d<-d[order(-pop)]
d<-d[d[,list(row1 = .I[1]), by = list(cbsa)][,row1]]
dm<-fread("C:/Users/Leonard/Documents/Data Viz/blog/hpi/fmhpi2016q3metro.txt")
dm$date<-as.Date(dm$date, format="%m/%d/%Y")
#compute year-over-year house price growth
dm[,hpa12:=hpi/shift(hpi,12,fill=NA)-1,by=metro]
#compute pre-2008 peak
dm[,hpi.max08:=max(ifelse(year<2009,hpi,0),na.rm=T),by=metro]
#compute post-2008 trough
dm[,hpi.min08:=min(ifelse(year>2008,hpi,1000),na.rm=T),by=metro]
setkey(d,cbsa.name)
setkey(dm,metro)
cbsa.list<-unique(d$cbsa.name)
metro.list<-unique(dm$metro)
dm2<-merge(dm,d,by.y="cbsa.name",by.x="metro",all.x=T)
dm2$state<-factor(dm2$country.etc)
dt<-dm2[date=="2016-09-01",c("metro","hpi","hpa12","hpi.max08","hpi.min08","state","city","metro.pop","country.etc"),with=F]
library(scales)
dt$hpa<-as.character(percent(dt$hpa12))
dt$hpa.peak<-round(100*(dt$hpi/dt$hpi.max08 -1),1)
dt$hpa.trough<-round(100*(dt$hpi/dt$hpi.min08 -1),1)
dt$metro.pop<-comma(dt$metro.pop)
dt$hpa<-round(100*dt$hpa12,1)
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,7,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
dm2[,state:=substr(regmatches(metro,regexec(", +[A-Z][A-Z]",metro)),3,4)]
dm2$state
unique(dm2$state)
unique(dm2$country.etc)
library(DT)
library(maps)
#source("../multiplot.R")
data(us.cities) # from the package maps
cbsa.data <-fread("C:/Users/Leonard/Documents/Data Viz/blog/geo/cbsa.city.txt")
cbsa.metro<-cbsa.data[metro.micro=="Metropolitan Statistical Area"]
#create lowercase names
cbsa.metro[,nameL:=tolower(name)]
us.cities<-data.table(us.cities)[,nameL:=tolower(name)]
d<-merge(cbsa.metro,us.cities,by="nameL")
#get rid of duplicates
# see: http://stackoverflow.com/questions/15776064/r-first-observation-by-group-using-data-table-self-join
d<-d[order(-pop)]
d<-d[d[,list(row1 = .I[1]), by = list(cbsa)][,row1]]
dm<-fread("C:/Users/Leonard/Documents/Data Viz/blog/hpi/fmhpi2016q3metro.txt")
dm$date<-as.Date(dm$date, format="%m/%d/%Y")
#compute year-over-year house price growth
dm[,hpa12:=hpi/shift(hpi,12,fill=NA)-1,by=metro]
#compute pre-2008 peak
dm[,hpi.max08:=max(ifelse(year<2009,hpi,0),na.rm=T),by=metro]
#compute post-2008 trough
dm[,hpi.min08:=min(ifelse(year>2008,hpi,1000),na.rm=T),by=metro]
setkey(d,cbsa.name)
setkey(dm,metro)
cbsa.list<-unique(d$cbsa.name)
metro.list<-unique(dm$metro)
dm2<-merge(dm,d,by.y="cbsa.name",by.x="metro",all.x=T)
dm2[,state:=substr(regmatches(metro,regexec(", +[A-Z][A-Z]",metro)),3,4)]
dm2$state<-factor(dm2$state)
dt<-dm2[date=="2016-09-01",c("metro","hpi","hpa12","hpi.max08","hpi.min08","state","city","metro.pop","country.etc"),with=F]
library(scales)
dt$hpa<-as.character(percent(dt$hpa12))
dt$hpa.peak<-round(100*(dt$hpi/dt$hpi.max08 -1),1)
dt$hpa.trough<-round(100*(dt$hpi/dt$hpi.min08 -1),1)
dt$metro.pop<-comma(dt$metro.pop)
dt$hpa<-round(100*dt$hpa12,1)
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[4] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
dm
names(dm)
names(dt)
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,1,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[7] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[7] + ', Principal state: ' + d[6] + ',metro population: ' + d[5] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
names(dt)
datatable(
cbind(' ' = '&bigtriangledown;',dt), escape = -2,
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Metro house price trends, September 2016: '), 'year-over-year percent change in house prices',
htmltools::br(),htmltools::em("Source: Freddie Mac House Price Index, use search boxes and arrows to filter/sort data." )),
colnames = c( "Principal State"='state' ,"Metro"="metro","Annual percent change in house prices"="hpa",
"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(
width=800,
columnDefs = list(
list(visible = FALSE, targets = c(0,3,4,5,6,8,9,10)),
list(orderable = FALSE, className = 'details-control', targets = 1)
)
),
callback = JS("
table.column(1).nodes().to$().css({cursor: 'pointer'});
var format = function(d) {
return '<div style=\"background-color:#eee; padding: .5em;\"> Principal city: ' + d[8] + ', Principal state: ' + d[7] + ',metro population: ' + d[9] + '</div>';
};
table.on('click', 'td.details-control', function() {
var td = $(this), row = table.row(td.closest('tr'));
if (row.child.isShown()) {
row.child.hide();
td.html('&bigtriangledown;');
} else {
row.child(format(row.data())).show();
td.html('&bigtriangleup;');
}
});"
))
