labs(x="Annual % Change in House Prices",y="density",
title="Distribution of annual house price percent change<br>over metro areas<br>@lenkiefer Source: Freddie Mac House Price Index")
ggplotly(g4) %>% animation_opts(frame=1000,transition=600,redraw=T)
df$year<-year(df$date)
df$month<-month(df$date)
myf<-function(yy){
df.area<-data.frame(x=density(df[year==yy & month==9]$hpa12)$x,
y=density(df[year==yy & month==9]$hpa12)$y)
df.area$year<-yy
return(df.area)
}
# Create a function to stack the fitted densities in a data frame:
myf2<-function(start,end){
my.out<-myf(start)
for (i in (start+1):end){
my.out<-rbind(my.out,myf(i))
}
return(my.out)
}
# Create plot:
g4<-
ggplot(data=myf2(2005,2016),aes(x=x,y=y,fill=factor(year),group=year,frame=year))+geom_area(alpha=0.7,position="identity")+
facet_wrap(~year)
scale_color_viridis(discrete=T)+ theme_minimal()+
scale_fill_viridis(discrete=T)+scale_x_continuous(label=percent)+
geom_text(x=-.25,y=12,hjust=0,aes(label=paste0("Sep. ",year),color=factor(year)),
size=12,fontface="bold")+ theme(legend.position="none")+
labs(x="Annual % Change in House Prices",y="density",
title="Distribution of annual house price percent change",
subtitle="over metro areas",
caption="@lenkiefer Source: Freddie Mac House Price Index")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)),
plot.background=element_rect(fill="#fffff8",color=NA))
df$year<-year(df$date)
df$month<-month(df$date)
myf<-function(yy){
df.area<-data.frame(x=density(df[year==yy & month==9]$hpa12)$x,
y=density(df[year==yy & month==9]$hpa12)$y)
df.area$year<-yy
return(df.area)
}
# Create a function to stack the fitted densities in a data frame:
myf2<-function(start,end){
my.out<-myf(start)
for (i in (start+1):end){
my.out<-rbind(my.out,myf(i))
}
return(my.out)
}
# Create plot:
g4<-
ggplot(data=myf2(2005,2016),aes(x=x,y=y,fill=factor(year),group=year,frame=year))+geom_area(alpha=0.7,position="identity")+
facet_wrap(~year)+
scale_color_viridis(discrete=T)+ theme_minimal()+
scale_fill_viridis(discrete=T)+scale_x_continuous(label=percent)+
geom_text(x=-.25,y=12,hjust=0,aes(label=paste0("Sep. ",year),color=factor(year)),
size=12,fontface="bold")+ theme(legend.position="none")+
labs(x="Annual % Change in House Prices",y="density",
title="Distribution of annual house price percent change",
subtitle="over metro areas",
caption="@lenkiefer Source: Freddie Mac House Price Index")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)),
plot.background=element_rect(fill="#fffff8",color=NA))
g4
df$year<-year(df$date)
df$month<-month(df$date)
myf<-function(yy){
df.area<-data.frame(x=density(df[year==yy & month==9]$hpa12)$x,
y=density(df[year==yy & month==9]$hpa12)$y)
df.area$year<-yy
return(df.area)
}
# Create a function to stack the fitted densities in a data frame:
myf2<-function(start,end){
my.out<-myf(start)
for (i in (start+1):end){
my.out<-rbind(my.out,myf(i))
}
return(my.out)
}
# Create plot:
g4<-
ggplot(data=myf2(2005,2016),aes(x=x,y=y,fill=factor(year),group=year,frame=year))+geom_area(alpha=0.7,position="identity")+
facet_wrap(~year)+
scale_color_viridis(discrete=T)+ theme_minimal()+
scale_fill_viridis(discrete=T)+scale_x_continuous(label=percent)+
labs(x="Annual % Change in House Prices",y="density",
title="Distribution of annual house price percent change",
subtitle="over metro areas",
caption="@lenkiefer Source: Freddie Mac House Price Index")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)),
plot.background=element_rect(fill="#fffff8",color=NA))
g4
df$year<-year(df$date)
df$month<-month(df$date)
myf<-function(yy){
df.area<-data.frame(x=density(df[year==yy & month==9]$hpa12)$x,
y=density(df[year==yy & month==9]$hpa12)$y)
df.area$year<-yy
return(df.area)
}
# Create a function to stack the fitted densities in a data frame:
myf2<-function(start,end){
my.out<-myf(start)
for (i in (start+1):end){
my.out<-rbind(my.out,myf(i))
}
return(my.out)
}
# Create plot:
g4<-
ggplot(data=myf2(2005,2016),aes(x=x,y=y,fill=factor(year),group=year,frame=year))+geom_area(alpha=0.7,position="identity")+
facet_wrap(~year)+
scale_color_viridis(discrete=T)+ theme_minimal()+
scale_fill_viridis(discrete=T)+scale_x_continuous(label=percent)+
labs(x="Annual % Change in House Prices",y="density",
title="Distribution of annual house price percent change",
subtitle="over metro areas",
caption="@lenkiefer Source: Freddie Mac House Price Index")+
theme(plot.title=element_text(size=18),
legend.position="none",
plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)),
plot.background=element_rect(fill="#fffff8",color=NA))
g4
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
g2<-
ggplot(data=dt[year>2000,],aes(x=year,y=rate30,color=rate30,group=year))+
geom_jitter(height=0,width=0.2,alpha=0.1,color="gray")+
geom_jitter(height=0,width=0.2,alpha=0.82)+
scale_x_continuous(breaks=seq(2001,2017,1))+
theme_minimal()+
scale_color_viridis(direction=-1,name="rate in pp")+
labs(y="30-year fixed mortgage rate (%)",        x="year",
title="Distribution of weekly mortgage rates",
subtitle="Each dot average rate for a week",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(legend.position="none",plot.subtitle=element_text(face="italic"),
plot.title=element_text(face="bold"),
plot.caption=element_text(hjust=0))
g2
#compute rolling min/max of house price index
df.state<-df.state[, hpi12min:=rollapply(hpi, 12, min,fill=NA, na.rm=FALSE,align='right'), by=state]
df.state<-df.state[, hpi12max:=rollapply(hpi, 12, max,fill=NA, na.rm=FALSE,align='right'), by=state]
g3<-
ggplot(data=df.state[(year>=2016) & month==9 & state !="DC" & state !="US"], aes(x=hpi, y=reorder(state,hpi), label=state,color=hpa12))+
geom_text(nudge_x = 0.025)  +
geom_point()+scale_x_log10(limits=c(70,350), breaks=c(70,100,150,250,350))+
geom_segment(aes(xend=hpi12min,x=hpi12max,y=reorder(state,hpi),yend=reorder(state,hpi)),alpha=0.7)+
theme_minimal()  +
scale_colour_gradient(low="red",high="blue",name = "12-month HPA",labels = percent)+
labs(y="State", x="House price index (log scale, Dec 2000 =100, NSA)",
title="State house price dynamics",
subtitle=paste(as.character(df.state[year==2016 & month==9 & state=="US"]$date,format="%b-%Y")),
caption="@lenkiefer Source: Freddie Mac house price index, each dot a state, lines trailing 12-month min-max")+
theme(plot.title=element_text(size=18))+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
theme(legend.justification=c(0,0), legend.position=c(.8,.75))
g3
#compute rolling min/max of house price index
df.state<-df.state[, hpi12min:=rollapply(hpi, 12, min,fill=NA, na.rm=FALSE,align='right'), by=state]
df.state<-df.state[, hpi12max:=rollapply(hpi, 12, max,fill=NA, na.rm=FALSE,align='right'), by=state]
g3<-
ggplot(data=df.state[(year>=2016) & month==9 & state !="DC" & state !="US"], aes(x=hpi, y=reorder(state,hpi), label=state,color=hpa12))+
geom_text(nudge_x = 0.025)  +
geom_point()+scale_x_log10(limits=c(70,350), breaks=c(70,100,150,250,350))+
geom_segment(aes(xend=hpi12min,x=hpi12max,y=reorder(state,hpi),yend=reorder(state,hpi)),alpha=0.7)+
theme_minimal()  +
scale_colour_gradient(low="red",high="blue",name = "12-month HPA",labels = percent)+
labs(y="", x="House price index (log scale, Dec 2000 =100, NSA)",
title="State house price dynamics",
subtitle=paste(as.character(df.state[year==2016 & month==9 & state=="US"]$date,format="%b-%Y")),
caption="@lenkiefer Source: Freddie Mac house price index, each dot a state, lines trailing 12-month min-max")+
theme(plot.title=element_text(size=18))+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"),
axis.text.y=element_blank())+
theme(legend.justification=c(0,0), legend.position=c(.8,.75))
g3
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
devtools::install_github('yihui/xaringan')
?xaringan::moon_reader
library(xaringan)
?.pull
?xaringan
library(xaringan)
?.pull
?xaringan::moon_reader
options(htmltools.dir.version = FALSE)
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="black"))
ggplotly(g1) %>% rangeslider()
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="black",alpha=0.75))
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="darkgray"))
ggplotly(g1) %>% rangeslider()
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="gray10"))
ggplotly(g1) %>% rangeslider()
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="gray20"))
ggplotly(g1) %>% rangeslider()
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="gray20"),
plot.background = element_rect(fill = 'gray20'))
ggplotly(g1) %>% rangeslider()
g1<-
ggplot(data=dt[year>2010,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18,color="white"),
axis.text.x=element_text(color="white"),
axis.text.y=element_text(color="white"),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="gray20"),
plot.background = element_rect(fill = 'gray20'))
ggplotly(g1) %>% rangeslider()
g1<-
ggplot(data=dt[year>2012,],aes(x=date,y=rate30,label=rate30))+geom_line(color="white")+
geom_text(data=tail(dt,1),nudge_x=60,nudge_y=.1,color="red",size=2.5,hjust=0)+
geom_point(data=tail(dt,1),size=2,color="red",alpha=0.75)+
geom_hline(linetype=2,color="red",yintercept=tail(dt,1)$rate30)+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly rates since 2011",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+ theme_minimal()+
theme(plot.title=element_text(size=18,color="white"),
axis.text.x=element_text(color="white"),
axis.text.y=element_text(color="white"),
plot.caption=element_text(hjust=0,vjust=1),
panel.background=element_rect(fill="gray20"),
plot.background = element_rect(fill = 'gray20'))
ggplotly(g1) %>% rangeslider()
library(quantmod)
df = getSymbols('MORTGAGE30US',src='FRED', auto.assign=F)
df = data.frame(date=time(df)), y=coredata(df) )
df = getSymbols('MORTGAGE30US',src='FRED', auto.assign=F)
df = data.frame(date=time(df), y=coredata(df) )
df
str(df)
df = getSymbols('MORTGAGE30US',src='FRED', auto.assign=F)
dt = data.table(date=time(df), y=coredata(df) )
dt
df
coredata(df)
getSymbols(c('MORTGAGE30US','GDP'),src='FRED', auto.assign=F)
getSymbols(c('MORTGAGE30US','GDP'),src='FRED', auto.assign=T)
df<-getSymbols(c('MORTGAGE30US','GDP'),src='FRED', auto.assign=T)
time(df)
coredata(df)
coredata(df)$GDP
coredata(df).GDP
df = getSymbols('MORTGAGE30US',src='FRED', auto.assign=F)
dt = data.table(date=time(df), y=coredata(df) )
dt
library(tidyverse)
library(quantmod)
df = getSymbols('MORTGAGE30US',src='FRED', auto.assign=F)
dt = data.table(date=time(df), coredata(df) )
ggplot(dt,aes(x=date,y=MORTGAGE30US)+geom_line()
)
ggplot(dt,aes(x=date,y=MORTGAGE30US))+geom_line()
tickers<-c('EXHOSLUSM495S','HSN1F','HOUST1F','HOUST','HPIPONM226S','PCE','PI',
'CPIAUCSL','MORTGAGE30US','WGS10YR','GDPC1','GDPC96',
'A939RX0Q048SEA','CUUR0000SEHA','CPIHOSNS')
tickers<-c('EXHOSLUSM495S','HSN1F','HOUST1F','HOUST','HPIPONM226S','PCE','PI',
'CPIAUCSL','MORTGAGE30US','WGS10YR','GDPC1','GDPC96',
'A939RX0Q048SEA','CUUR0000SEHA','CPIHOSNS')
getSymbols(tickers,src='FRED',env=df)
tickers<-c('EXHOSLUSM495S','HSN1F','HOUST1F','HOUST','HPIPONM226S','PCE','PI',
'CPIAUCSL','MORTGAGE30US','WGS10YR','GDPC1','GDPC96',
'A939RX0Q048SBEA','CUUR0000SEHA','CPIHOSNS')
getSymbols(tickers,src='FRED',env=df)
df
str(df)
dt<-data.table(date=time(df),coredata(df))
dt
df
getSymbols(tickers,src='FRED',env=df2)
df2 <- new.env()
getSymbols(tickers,src='FRED', env=df2)
dt<-data.table(date=time(df2),coredata(df2))
coredata(df2)
getSymbols(tickers,src='FRED', env=df2,auto.assign=F)
df2 <- new.env()
getSymbols(tickers,src='FRED', env=df2)
df2
coredata(df2)
?coredata
data(df2)
df2
df2$GDPC1
str(df2$GDPC1)
ggplot(data=df2$GDPC1,aes(x=date,y=GDPC1))+geom_line()
names(df2)
rm(df2)
df2 <- new.env()
getSymbols(tickers,src='FRED', env=df2)
names(df2)
df2 <- new.env()
df3<-getSymbols(tickers,src='FRED', env=df2)
df3
names(df3)
df3
coredata(df3)
coredata(df3$PCE)
df3$PCE
rm(df2)
df2 <- new.env()
getSymbols(tickers,src='FRED', env=df2)
time(df2$tickers[i])
time(df2$tickers[3])
df2$tickers[3]
df2$tickers[4]
df2
rm(df2)
df2 <- new.env()
getSymbols(tickers,src='FRED', env=df2)
df2
df2$PI
df2$tickers[4]
tickers[4]
str(tickers[4])
tickers[4]
df2$HOUST
make.data<-function(x){
df = getSymbols(x,src='FRED', auto.assign=F)
dt = data.table(date=time(df), coredata(df) )
return(dt)
}
make.data(tickers[3])
make.data<-function(x){
df = getSymbols(x,src='FRED', auto.assign=F)
dt = data.table(date=time(df), y=coredata(df) )
return(dt)
}
make.data(tickers[3])
make.data(tickers[3])
make.data<-function(x){
df = getSymbols(x,src='FRED', auto.assign=F)
dt = data.table(date=time(df), coredata(df) )
dplyr::rename(dt,y=x)
return(dt)
}
make.data(tickers[3])
make.data<-function(x){
df = getSymbols(x,src='FRED', auto.assign=F)
dt = data.table(date=time(df), coredata(df) )
dplyr::rename(dt,y=x)
return(dt)
}
make.data(tickers[3])
make.data<-function(x){
df = getSymbols(x,src='FRED', auto.assign=F)
dt = data.table(date=time(df), coredata(df) )
return(dt)
}
make.data(tickers[3])
?aes_string
ggplot(data=y,aes_string(date,tickers[3]))+geom_line()
y<-make.data(tickers[3])
ggplot(data=y,aes_string(date,tickers[3]))+geom_line()
ggplot(data=y)+geom_line()
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()
tickers
make.df<-function(i,indata=y){
y<-make.data(tickers[i])
out<-merge(indata,y,by="date")
}
y<-make.data(tickers[1])
for i in 2:length(tickers){
y<-make.data(tickers[1])
for (i in 2:length(tickers)){
y<-make.df(i,y)
}
y
y<-make.data(tickers[1])
y
make.df<-function(i,indata=y){
y<-make.data(tickers[i])
out<-merge(indata,y,by="date")
return(out)
}
for (i in 2:length(tickers)){
y<-make.df(i,y)
}
y
?merge
make.df<-function(i,indata=y){
y<-make.data(tickers[i])
out<-merge(indata,y,by="date",all=T)
return(out)
}
#initialize
y<-make.data(tickers[1])
for (i in 2:length(tickers)){
y<-make.df(i,y)
}
y
str(y)
str(y)
y[year(date)>2015]
ggplot(data=y,aes_string(x="date",y=tickers[4]))+geom_line()
ggplot(data=y[tickers[3]>0],aes_string(x="date",tickers[3]))+geom_line()
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()+scale_x_continous(expand())
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()+
scale_x_continuous(expand())
?expand
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()+
scale_x_continuous(expand(date))
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()+
scale_x_date(expand())
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()
dev.off()
dev.off()
ggplot(data=y,aes_string(x="date",tickers[3]))+geom_line()
ggplot(data=y,aes_string(x=date,tickers[3]))+geom_line()
tickers<-c('EXHOSLUSM495S','HSN1F','HOUST1F','HOUST',
'HPIPONM226S','PCE','PI')
#initialize
y<-make.data(tickers[1])
for (i in 2:length(tickers)){
y<-make.df(i,y)
}
y
my.dt<-make.data(tickers[1])
for (i in 2:length(tickers)){
my.dt<-make.df(i,my.dt)
}
my.dt
ggplot(data=my.dt,aes(x=date,y=HSN1F))+geom_line()
my.dt
ggplot(Data=my.dt,aes(x=date,y=EXHOSLUSM495S))+geom_line()+
theme_minimal()
ggplot(Data=my.dt,aes(x=date,y=EXHOSLUSM495S))+geom_line()
names(my.dt)
ggplot(data=my.dt,aes(x=date,y=EXHOSLUSM495S))+geom_line()+
theme_minimal()
ggplot(data=my.dt[year(date)>2012,],aes(x=date,y=EXHOSLUSM495S))+geom_line()+
theme_minimal()
