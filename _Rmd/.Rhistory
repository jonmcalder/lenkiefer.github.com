tf<-data.table(tf) #data.table useful for subsetting
N<-max(tf$.frame)  #number of frames
N
242*346/20
N<-max(tf$.frame)
#create the animation
oopt = ani.options(interval = 0.25)
saveGIF({for (i in 1:N) {
g<-myplot(tf[.frame==i])
print(g)
ani.pause()
print(i)}
},movie.name="st cost.gif",ani.width = 900, ani.height = 700)
ggplot(data=s.data,aes(x=ratio,fill=st.ratio,group=fips,weight=hsum))+
theme_minimal()+facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color="darkgray")+coord_cartesian(xlim=c(0,1.2))+
scale_fill_viridis(limits=c(.2,.5),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1.2),label=percent)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
ggplot(data=s.data,aes(x=ratio,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color="darkgray")+coord_cartesian(xlim=c(0,1.2))+
scale_fill_viridis(limits=c(.2,.5),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1.2),label=percent)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
ggplot(data=s.data,aes(x=ratio,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1.2))+
scale_fill_viridis(limits=c(.2,.5),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1.2),label=percent)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
ggplot(data=s.data,aes(x=ratio,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1.2))+
scale_fill_viridis(limits=c(.2,.5),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1.2),label=percent)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
ggplot(data=s.data,aes(x=ratio,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1.2))+
scale_fill_viridis(limits=c(.2,.5),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1.2),label=percent)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
ggplot(data=s.data,aes(x=ratio,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1.2))+
scale_fill_viridis(limits=c(.2,.5),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1.2),label=percent)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
summary(s.data)
ggplot(data=s.data,aes(x=value,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1e6))+
scale_fill_viridis(limits=c(0,1e6),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1e6),label=dollar)
ggplot(data=s.data,aes(x=valueh,fill=st.ratio,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1e6))+
scale_fill_viridis(limits=c(0,1e6),label=percent,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1e6),label=dollar)
s.data[,st.value:=weightedMean(valueh,hhwt,na.rm=T),by=abb]
ggplot(data=s.data,aes(x=valueh,fill=st.value,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1e6))+
scale_fill_viridis(limits=c(0,1e5),label=dollar,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1e6),label=dollar)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
s.data[,weightedMean(valueh,hhwt,na.rm=T),by=abb]
ggplot(data=s.data,aes(x=valueh,fill=st.value,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1e6))+
scale_fill_viridis(limits=c(0,1e6),label=dollar,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1e6),label=dollar)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
ggplot(data=s.data,aes(x=valueh,fill=st.value,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1e6))+
scale_fill_viridis(limits=c(0,5.2e5),label=dollar,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1e6),label=dollar)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
max(s.data[,weightedMean(valueh,hhwt,na.rm=T),by=abb])
s.data[,weightedMean(valueh,hhwt,na.rm=T),by=abb]
ggplot(data=s.data,aes(x=valueh,fill=st.value,group=fips,weight=hhwt))+
theme_minimal()+#facet_wrap(~abb)+
geom_density(size=.75,alpha=.75,color=NA)+coord_cartesian(xlim=c(0,1e6))+
scale_fill_viridis(limits=c(0,6e5),label=dollar,name="Average cost ratio\n\n")+
theme(plot.title=element_text(size=14))+theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+  theme(legend.position = "right")+
scale_x_continuous(limits=c(0,1e6),label=dollar)+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
labs(x="Owner costs as a % of income for Homeowners with a Mortgage",
y="",
title="Homeowner housing costs",
subtitle=paste("Households with a mortgage:",head(indata$abb,1),"in 2014"),
caption="@lenkiefer Source: 2014 American Community Survey\nIPUMS-USA, University of Minnesota, www.ipums.org.\nExcludes households with income < $1,000 and those living in group quarters")
library(data.table)
library(animation)
library(ggplot2)
library(scales)
library(ggthemes)
#This gif does wage growth (annual y/y hourly earnings)
setwd('C:/Users/Leonard/Documents/Data Viz/blog/jobs')
mydata <- fread("~/Data Viz/blog/jobs/nfp2.txt")
mydata$date<-as.Date(mydata$date, format="%m/%d/%Y")
mydata$x<-mydata$date
mydata$y<-mydata$jg
mydata$slabel=mydata$jg
mydata2<-mydata[date>='2009-12-31' ]
dlist<-unique(mydata2$date)
N<-length(dlist)
oopt = ani.options(interval = 0.15)
saveGIF({for (i in 1:N) {
g<-
ggplot(data=mydata[year(date)>2009 & date<=dlist[i], ], aes(x=date,y=jg,label=jg))+geom_line()+theme_minimal()+
theme(legend.position="none")+
#scale_x_continuous(limits=c(0,20))+
#scale_y_continuous(limits=c(3.,4))+
#scale_y_continuous(limits=c(3,4),breaks=seq(3,4,.1))+
geom_text(data=mydata[date==dlist[i]],nudge_x=90)+
geom_point(data=mydata[date==dlist[i] ],size=2,color="red",alpha=0.75)+
labs(x="", y="Nonfarm payroll growth (m/m, Ths. SA)",
subtitle="Nonfarm payroll growth (m/m, Ths. SA)",
title="Monthly job gains",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics")+
theme(plot.title=element_text(size=18))+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25),"cm"))+
coord_cartesian(xlim=c(as.Date("2010-01-01"),as.Date("2016-12-31")), y=c(-200,600))
print(g)
print(i)
ani.pause()
}
for (i2 in 1:10) {
print(g)
print(i2)
ani.pause()
}
#},movie.name="rate_7_29_2016.gif",ani.width = 500, ani.height = 350)
},movie.name="nfp_mtm_sep_2016.gif",ani.width = 500, ani.height = 350)
library(foreign)
library(data.table)
setwd('C:/Users/Leonard/Documents/Data Viz/blog/acs')
df <- read.dta("usa_00003.dta")
df<-haven::read_dta("usa_00001.dta")
df<-haven::read_dta("usa_00003.dta")
df[] <- lapply(df, unclass)  #https://github.com/hadley/haven/issues/59
dt<-data.table(df)
dt
unique(dt$year)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
install.packages("evaluate")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
library(evaluate)
R.version
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
