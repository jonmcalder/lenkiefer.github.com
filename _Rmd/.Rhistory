popDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="c2010_hist_pops")
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
popDF<-popDF %>% gather(year.of,"pop",5:27)
popDF<-mutate(popDF,year=ifelse(substr(year.of,1,1)=="e",substr(year.of,5,9),substr(year.of,4,8)))
popDF<-data.table(popDF)
popDF<-rename(popDF,fips=GEOID10 )
dt<-data.table(popDF)
dt[,sum(pop),by=year]
states<-usa_composite()
smap<-fortify(states,region="fips_state")
smap.all<-smap
counties <- counties_composite()
#get data:
counties@data <- left_join(counties@data, popDF.i, by = "fips")
counties@data <- left_join(counties@data, shareDF.i, by = "fips")
cmap <- fortify(counties_composite(), region="fips")
cmap$state<-substr(cmap$id,1,2)
cmap$county<-substr(cmap$id,3,5)
cmap$fips<-paste0(cmap$state,cmap$county)
cmap.all<-cmap
mycaption<-"@lenkiefer Source: Schroeder, Jonathan P. (2016). Historical Population Estimates for 2010 U.S. States, Counties and Metro/Micro Areas, 1790-2010. Retrieved from the Data Repository for the University of Minnesota, http://doi.org/10.13020/D6XW2H."
mycaption <- paste0(strwrap(mycaption, 130), sep="", collapse="\n")
#total counts map:
ggplot() +
geom_map(data = cmap.all, map = cmap.all,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap.all,
aes(fill =log(pop), map_id = fips),
color = NA) +
geom_map(data = smap.all, map = smap.all,
aes(x = long, y = lat, map_id = id),
color = "gray", size = .25, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15))) +
coord_proj(us_laea_proj) +   labs(title="",subtitle="" ) +
scale_fill_viridis(name = "Population", discrete=F,option="D",end=0.95,direction=-1)+
theme(legend.position = "none") +theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
labs(x="Population in 2014 (log scale)",y="",
#subtitle="Each dot represents 1 county",
title="County Population Distribution",
caption="@lenkiefer Source: TBD")
y.list<-unique(popDF$year)
yy<-y.list[1]
yy<-"1900"
popDF.i<-subset(popDF,year==yy)
shareDF.i<-subset(shareDF,year==yy)
#shareDF.i<-shareDF.i[,c(fips,share)]
shareDF.i<-data.table(shareDF.i)[,list(fips,share)]
counties <- counties_composite()
#get data:
counties@data <- left_join(counties@data, popDF.i, by = "fips")
counties@data <- left_join(counties@data, shareDF.i, by = "fips")
shareDF
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
head(shareDF)
library(dplyr)
shareDF<-rename(shareDF,fips=GEOID10 )
names(shareDF)
rename(shareDF,fips=GEOID10)
rename(shareDF,fips=GEOID10)
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
#shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
names(shareDF)
?rename
popDF<-popDF %>% gather(year.of,"pop",5:27)
popDF<-mutate(popDF,year=ifelse(substr(year.of,1,1)=="e",substr(year.of,5,9),substr(year.of,4,8)))
popDF<-data.table(popDF)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=my.out[industry_code==100000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="Ths, Seasonally-adjusted",
subtitle="by industry",
title="Hires, Job Openings, and Separations (Ths, Seasonally-Adjusted Index)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
ggplot(data=my.out[industry_code==100000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="by industry",
title="Hires, Job Openings, and Separations (Ths, Seasonally-Adjusted Index)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
ggplot(data=my.out[industry_code==100000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="Ths, Seasonally-Adjusted Index",
title="Hires, Job Openings, and Separations ",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
my.out
my.out[industry_text=="Total private" & dataelement_code =="JO"]
my.out[industry_text=="Total private" & dataelement_code =="JO"]$value
names(my.out)
unique(my.out$industry_text)
my.out[industry_text=="Total private" & dataelement_code =="JO"]$value
my.out[industry_text=="Total private" & dataelement_code =="JO"]
my.series<-jolts.series[ seasonal=="S"  &
ratelevel_code=="L" & region_code=="00", ]
my.out<-jolts.dt[ series_id %in% my.series$series_id,]
my.out<-merge(my.out,jolts.series[,list(series_id,industry_code,dataelement_code)],by="series_id")
my.out<-merge(my.out,jolts.element[,list(dataelement_code,dataelement_text)],by="dataelement_code")
my.out<-merge(my.out,jolts.ind[,list(industry_code,industry_text)],by="industry_code")
my.out[,month:=as.numeric(substr(period,2,3))]
my.out[,date:= as.Date(ISOdate(year,month,1))]
my.out[industry_text=="Total Private"]
bdata<-my.out[year==2000 & month==12,]
bdata<-dplyr::rename(bdata, value00=value)
bdata<-bdata[, c('value00','series_id'), with = FALSE]
my.out<-merge(my.out,bdata,by="series_id")
my.out[,val00:=100*value/value00]
bdata<-my.out[year==2007 & month==12,]
bdata<-dplyr::rename(bdata, value07=value)
bdata<-bdata[, c('value07','series_id'), with = FALSE]
my.out<-merge(my.out,bdata,by="series_id")
my.out[,val07:=100*value/value07]
my.out<-my.out[order(date,-value00),]
my.out[,industry_textf:=factor(industry_text,levels=unique(my.out$industry_text))]
my.out
my.out[date=="2016-07-01"]
my.series
jolts.dt[series_id=="JTS10000000JOL"]
jolts.dt[series_id=="JTS00000000JOL"]
my.series<-jolts.series[ seasonal=="S"  &
ratelevel_code=="L" & region_code=="00", ]
my.series
my.series[industry_code==100000 & dataelement_code=="JO"]
jolts.dt[series_id==JTS10000000JOL]
jolts.dt[series_id=="JTS10000000JOL"]
my.series<-jolts.series[ seasonal=="S"  &
ratelevel_code=="L" & region_code=="00", ]
my.out<-jolts.dt[ series_id %in% my.series$series_id,]
my.out<-merge(my.out,jolts.series[,list(series_id,industry_code,dataelement_code)],by="series_id")
my.out<-merge(my.out,jolts.element[,list(dataelement_code,dataelement_text)],by="dataelement_code")
my.out<-merge(my.out,jolts.ind[,list(industry_code,industry_text)],by="industry_code")
my.out[,month:=as.numeric(substr(period,2,3))]
my.out[,date:= as.Date(ISOdate(year,month,1))]
my.out[series_id=="JTS00000000JOL "]
my.out[series_id=="JTS00000000JOL"]
jolts.series[series_id=="JTS00000000JOL" ]
ggplot(data=my.out[industry_code==100000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="Total Privae, (Ths, Seasonally-Adjusted)",
title="Hires, Job Openings, and Separations ",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
unique(jolts.series$region_code)
my.series<-jolts.series[ seasonal=="S"  &
ratelevel_code=="L" & region_code %in% c("0","00"), ]
my.out<-jolts.dt[ series_id %in% my.series$series_id,]
my.out<-merge(my.out,jolts.series[,list(series_id,industry_code,dataelement_code)],by="series_id")
my.out<-merge(my.out,jolts.element[,list(dataelement_code,dataelement_text)],by="dataelement_code")
my.out<-merge(my.out,jolts.ind[,list(industry_code,industry_text)],by="industry_code")
my.out[,month:=as.numeric(substr(period,2,3))]
my.out[,date:= as.Date(ISOdate(year,month,1))]
bdata<-my.out[year==2000 & month==12,]
bdata<-dplyr::rename(bdata, value00=value)
bdata<-bdata[, c('value00','series_id'), with = FALSE]
my.out<-merge(my.out,bdata,by="series_id")
my.out[,val00:=100*value/value00]
bdata<-my.out[year==2007 & month==12,]
bdata<-dplyr::rename(bdata, value07=value)
bdata<-bdata[, c('value07','series_id'), with = FALSE]
my.out<-merge(my.out,bdata,by="series_id")
my.out[,val07:=100*value/value07]
my.out<-my.out[order(date,-value00),]
my.out[,industry_textf:=factor(industry_text,levels=unique(my.out$industry_text))]
ggplot(data=my.out[industry_code==00000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="Total Privae, (Ths, Seasonally-Adjusted)",
title="Hires, Job Openings, and Separations ",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
ggplot(data=my.out[industry_code==00000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="Total Nonfarm, (Ths, Seasonally-Adjusted)",
title="Hires, Job Openings, and Separations ",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
my.series
jolts.dt[series_id=="JTS00000000JOL"]
summary(jolts.dt[series_id=="JTS00000000JOL"])
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
d.list<-unique(my.out$date)
d.list2<-unique(my.out[date>='12-01-07',])
d.list2
d.list<-unique(my.out$date)
d.list2<-unique(my.out[date>='2007-12-01',]$date)
d.list2
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
my.out<-my.out[order(date,-value00),]
my.out[,industry_textf:=factor(industry_text,levels=unique(my.out$industry_text))]
d.list<-unique(my.out$date)
d.list2<-unique(my.out[date>='2007-12-01',]$date)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
d.list2
ggplot(data=my.out[industry_code==00000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="Total Nonfarm, (Ths, Seasonally-Adjusted)",
title="Hires, Job Openings, and Separations ",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
#ratelevel: R=rate, L=level
#dataelement_code	dataelement_text	display_level	selectable	sort_sequence
#HI	Hires	0	T	2
#JO	Job openings	0	T	1
#LD	Layoffs and discharges	1	T	5
#OS	Other separations	1	T	6
#QU	Quits	1	T	4
#TS	Total separations	0	T	3
#region_code	region_text	display_level	selectable	sort_sequence
#00	Total US	0	T	1
#MW	Midwest (Only available for Total Nonfarm)	1	T	4
#NE	Northeast (Only available for Total Nonfarm)	1	T	2
#SO	South (Only available for Total Nonfarm)	1	T	3
#WE	West (Only available for Total Nonfarm)	1	T	5
#industries
ind.list<-unique(jolts.series$industry_code)
ind.list1<-unique(jolts.ind[display_level==1,]$industry_code)
ind.list2<-unique(jolts.ind[display_level==2,]$industry_code)
ind.list3<-unique(jolts.ind[display_level==3,]$industry_code)
reg.list<-unique(jolts.series$region_code)
elem.list<-unique(jolts.element$dataelement_code)
my.series<-jolts.series[ seasonal=="S"  &
ratelevel_code=="L" & region_code %in% c("0","00"), ]
my.out<-jolts.dt[ series_id %in% my.series$series_id,]
my.out<-merge(my.out,jolts.series[,list(series_id,industry_code,dataelement_code)],by="series_id")
my.out<-merge(my.out,jolts.element[,list(dataelement_code,dataelement_text)],by="dataelement_code")
my.out<-merge(my.out,jolts.ind[,list(industry_code,industry_text)],by="industry_code")
my.out[,month:=as.numeric(substr(period,2,3))]
my.out[,date:= as.Date(ISOdate(year,month,1))]
bdata<-my.out[year==2000 & month==12,]
bdata<-dplyr::rename(bdata, value00=value)
bdata<-bdata[, c('value00','series_id'), with = FALSE]
my.out<-merge(my.out,bdata,by="series_id")
my.out[,val00:=100*value/value00]
bdata<-my.out[year==2007 & month==12,]
bdata<-dplyr::rename(bdata, value07=value)
bdata<-bdata[, c('value07','series_id'), with = FALSE]
my.out<-merge(my.out,bdata,by="series_id")
my.out[,val07:=100*value/value07]
my.out<-my.out[order(date,-value00),]
my.out[,industry_textf:=factor(industry_text,levels=unique(my.out$industry_text))]
d.list<-unique(my.out$date)
d.list2<-unique(my.out[date>='2007-12-01',]$date)
ggplot(data=my.out[industry_code==00000 & dataelement_code %in% c("HI","JO","TS"),],
aes(x=date,y=value,color=dataelement_text))+
facet_wrap(~dataelement_text)+scale_y_continuous(label=comma)+
scale_color_viridis(name="",discrete=T,end=0.8)+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=1.1)+
theme_minimal()+theme(legend.position="none")+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 8))+
labs(x="", y="",
subtitle="Total Nonfarm, (Ths, Seasonally-Adjusted)",
title="Hires, Job Openings, and Separations ",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=my.out[ industry_code %in% ind.list2 & dataelement_code=="TS",],
aes(x=date,y=value,color=industry_text))+
facet_wrap(~industry_textf,scales="free_y")+
theme(strip.text.x = element_text(size = 8))+
geom_line(size=0.85)+
theme_minimal()+theme(legend.position="none")+
#scale_x_date(limits=c(min(d.list2),max(d.list2)))+
scale_x_date(limits=c(as.Date("2007-12-01"),max(d.list)))+
theme(plot.caption=element_text(hjust=0,size=7))+
theme(strip.text.x = element_text(size = 7))+
theme(axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7)  ) +
labs(x="", y="Ths, Seasonally-adjusted",
subtitle="by industry",
title="Total Separations (Ths, Seasonally-Adjusted)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics Job Openings and Labor Turnover Survey (JOLTS)")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
bv<-fread("C:/Users/Leonard/Documents/Data Viz/blog/blsjobs/bv.txt")
bv$date<-as.Date(bv$date, format="%m/%d/%Y")
bv$id<-factor(bv$id,levels=unique(bv$id))
d.list<-unique(bv$date)
N<-length(d.list)-1
i
N
i<-188
ggplot(data=bv[date<=d.list[i],],aes(y=jo.rate,x=ur.rate,color=rec,group=code))+
geom_point(aes(alpha=as.numeric(date)/as.numeric(d.list[i])))+
scale_alpha_continuous(guide=F)+
# scale_color_discrete()+
theme_minimal()+coord_cartesian(xlim=c(4,10),ylim=c(1.5,4))+
scale_color_viridis(name="Recession or\nExpansion?",discrete=T,direction=-1,option="D",end=0.75,begin=0.25)+
geom_path(alpha=0.5)+ #scale_color_viridis(discrete=T,direction=-1)+
geom_text(data=bv[date==d.list[i],],aes(label=as.character(date,format="%b-%Y")),color="black")+
theme(plot.caption=element_text(hjust=0))+
labs(x="Unemployment Rate",y="Job Openings Rate",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (SA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Opening and Labor Turnover Survey")
ggplot(data=bv[date<=d.list[i],],aes(y=jo.rate,x=ur.rate,color=rec,group=code))+
geom_point(aes(alpha=as.numeric(date)/as.numeric(d.list[i])))+
scale_alpha_continuous(guide=F)+
# scale_color_discrete()+
theme_minimal()+coord_cartesian(xlim=c(4,10),ylim=c(1.5,4))+
scale_color_viridis(name="Recession or\nExpansion?",discrete=T,direction=-1,option="D",end=0.75,begin=0.25)+
geom_path(alpha=0.5)+ #scale_color_viridis(discrete=T,direction=-1)+
#geom_text(data=bv[date==d.list[i],],aes(label=as.character(date,format="%b-%Y")),color="black")+
theme(plot.caption=element_text(hjust=0))+
labs(x="Unemployment Rate",y="Job Openings Rate",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (SA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Opening and Labor Turnover Survey")
ggplot(data=bv[date<=d.list[i],],aes(y=jo.rate,x=ur.rate,color=rec,group=code))+
geom_point(aes(alpha=as.numeric(date)/as.numeric(d.list[i])))+
scale_alpha_continuous(guide=F)+
# scale_color_discrete()+
theme_minimal()+coord_cartesian(xlim=c(4,10),ylim=c(1.5,4))+
scale_color_viridis(name="Recession or\nExpansion?",discrete=T,direction=-1,option="D",end=0.75,begin=0.25)+
geom_path(alpha=0.5)+ #scale_color_viridis(discrete=T,direction=-1)+
#geom_text(data=bv[date==d.list[i],],aes(label=as.character(date,format="%b-%Y")),color="black")+
theme(plot.caption=element_text(hjust=0,size=7))+
labs(x="Unemployment Rate",y="Job Openings Rate",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (SA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Opening and Labor Turnover Survey")
ggplot(data=bv,aes(y=jo.rate,x=ur.rate,color=rec,group=code))+
geom_point(aes(alpha=as.numeric(date)/as.numeric(d.list[i])))+
scale_alpha_continuous(guide=F)+
theme_minimal()+coord_cartesian(xlim=c(4,10),ylim=c(1.5,4))+
scale_color_viridis(name="Recession or\nExpansion?",discrete=T,direction=-1,option="D",end=0.75,begin=0.25)+
geom_path(alpha=0.5)+
theme(plot.caption=element_text(hjust=0,size=7))+
labs(x="Unemployment Rate",y="Job Openings Rate",
title="The Beveridge Curve",
subtitle="job openings rate vs unemployment rate (SA)",
caption="@lenkiefer Source: U.S. Bureau of Labor Statistics, Current Population Survey and Job Opening and Labor Turnover Survey")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
getwd()
rm(cmap)
rm(cmap.all)
rm(popDF)
rm(popDF.i)
rm(shareDF)
rm(shareDF.i)
rm(smap)
rm(smap.all)
