# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=dt,aes(x=emp.pc,y=hpa12))+
facet_wrap(~name)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
names(dt)
ggplot(data=dt,aes(x=emp.pc,y=hpa12))+
facet_wrap(~metro)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
unique(dt$metro)
dev.off()
ggplot(data=dt,aes(x=emp.pc,y=hpa12))+
facet_wrap(~metro)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
names(metro)
names(dt)
unique(dt[order(-emp),]$metro)
# Scatterplot
ggplot(data=filter(dt,metro %in% unique(dt[order(-emp),]$metro)[1:10]),aes(x=emp.pc,y=hpa12))+
facet_wrap(~metro)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
filter(dt,metro %in% unique(dt[order(-emp),]$metro)[1:10])
filter(dt,metro %in% unique(dt[order(-emp),]$metro)[1:10])
filter(dt,metro %in% unique(dt[order(-emp),]$metro)$metro[1:10,]
)
filter(dt,metro %in% unique(dt[order(-emp),]$metro)$metro[1:10,]dt[date==max(dt$date),][order(-emp)]
dt[date==max(dt$date),][order(-emp)]
dt[date==max(dt$date),][order(-emp)]$metro
dt[date==max(dt$date),][order(-emp)]$metro[1:10]
# Scatterplot
ggplot(data=filter(dt,metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:10]),aes(x=emp.pc,y=hpa12))+
facet_wrap(~metro)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
filter(dt,metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:10])
dt[date==max(dt$date),][order(-emp)]$metro
dt[metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:10],]
ggplot(data=dt[metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:10],],aes(x=emp.pc,y=hpa12))+
facet_wrap(~metro)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
names(dt)
ggplot(data=dt[metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:12],],
aes(x=emp.pc,y=hpa12,color=region))+
facet_wrap(~metro)+
geom_point()+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
x <- c(0.2, 0.2, 0.4, 0.4)
y <- c(0.2, 0.4, 0.4, 0.2)
grid.newpage()
grid.bezier(x, y)
grid.bezier(c(x, x + .4), c(y + .4, y + .4),
id=rep(1:2, each=4))
grid.segments(.4, .6, .6, .6)
grid.bezier(x, y,
gp=gpar(lwd=3, fill="black"),
arrow=arrow(type="closed"),
vp=viewport(x=.9))
library(ggplot2)
set.seed(47)
df <- as.data.frame(as.table(replicate(8, sample(4))), responseName = 'rank')
df$Var2 <- as.integer(df$Var2)
ggplot(df, aes(Var2, rank, color = Var1)) + geom_line() + geom_point()
grid.bezier(df$Var2,df$rank)
?grid.bezier
grid.xspline(df$Var2,df$rank)
grid.xspline(df$Var2,df$rank)
grid.newpage()
grid.xspline(df$Var2,df$rank)
grid.newpage()
grid.points(df$Var2,df$rank)
grid.xspline(df$Var2,df$rank)
grid.newpage()
grid.points(df$Var2,df$rank)
grid.xspline(df$Var2,df$rank)
popViewport()
dev.off()
cars.spl <- with(df, smooth.spline(Var2, rank))
cars.spl
lines(cars.spl, col = "blue")
plot(Var2,rank, data = df, main = "data(cars)  &  smoothing splines")
cars.spl <- with(df, smooth.spline(Var2, rank))
cars.spl
lines(cars.spl, col = "blue")
plot(Var2,rank, data = df, main = "data(cars)  &  smoothing splines")
df
cars.spl
names(cars.spl)
ggplot(data=df,aes(x=Var2,y=rank))+geom_point()
ggplot(data=df,aes(x=Var2,y=rank,color=Var1))+geom_point()
ggplot(data=df,aes(x=Var2,y=rank,color=Var1))+geom_point()+
geom_line(data=cars.spl,aes(x=x,y=y,color=w))
cars.spl$x
ggplot(data=df,aes(x=Var2,y=rank,color=Var1))+geom_point()+
geom_line(aes(x=cars.spl$x,y=cars.spl$y,color=w))
ggplot(data=df,aes(x=Var2,y=rank,color=Var1))+geom_point()+
geom_line(aes(x=cars.spl$x,y=cars.spl$y,color="red"))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(aes(x=cars.spl$x,y=cars.spl$y))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(data=data.frame(Var2=cars.spl$x,rank=cars.spl$y))
?smooth.spline
df
cars.spl <- with(filter(df,Var1=="A"), smooth.spline(Var2, rank))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(data=data.frame(Var2=cars.spl$x,rank=cars.spl$y))
cars.spl <- with(filter(df,Var1=="B"), smooth.spline(Var2, rank))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(data=data.frame(Var2=cars.spl$x,rank=cars.spl$y))
?smooth.spline
cars.spl <- with(filter(df,Var1=="B"), smooth.spline(Var2, rank,all.knots=T))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(data=data.frame(Var2=cars.spl$x,rank=cars.spl$y))
cars.spl <- with(filter(df,Var1=="B"), smooth.spline(Var2, rank,all.knots=T,spar=2))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(data=data.frame(Var2=cars.spl$x,rank=cars.spl$y))
cars.spl <- with(filter(df,Var1=="B"), smooth.spline(Var2, rank,all.knots=T,spar=0.1))
ggplot(data=df,aes(x=Var2,y=rank))+geom_point(aes(color=Var1))+
geom_line(data=data.frame(Var2=cars.spl$x,rank=cars.spl$y))
?bs
library(stats)
?bs
require(stats); require(graphics)
?bs
library(splines)
?bs
install.packages("cobs")
library(cobs)
?cobs
cobs(df$Var2, df$y)
cobs(df$Var2, df$y, pointwise=rbind(c(0,-100,-1),c(0,100,1)))
df$Var2
df$y
df$rank
as.matrix(df$Var2,df$rank)
as.matrix()
?as.matrix
as.matrix(cbind(df$Var2,df$rank)),ncol=2)
as.matrix(cbind(df$Var2,df$rank),ncol=2)
as.matrix(cbind(1,df$Var2,df$rank),ncol=3)
df2<-as.matrix(cbind(2,df$Var2,0),ncol=3)
df2
cobs(df$Var2, df$rank, pointwise=rbind(df1,df2))
df1<-as.matrix(cbind(0,df$Var2,df$rank),ncol=3)
df2<-as.matrix(cbind(2,df$Var2,0),ncol=3)
cobs(df$Var2, df$rank, pointwise=rbind(df1,df2))
cobs(df$Var2, df$rank,contraint="none",pointwise=rbind(df1,df2))
cobs(df$Var2, df$rank,constraint="none",pointwise=rbind(df1,df2))
cobs(x=df$Var2, y=df$rank,constraint="none",pointwise=df2)
cobs(x=df$Var2, y=df$rank,constraint="none",pointwise=df1)
cobs(x=df$Var2, y=df$rank,constraint="concave")
plot(cobs(x=df$Var2, y=df$rank,constraint="concave"))
plot(cobs(x=df$Var2, y=df$rank,constraint="none"))
plot(cobs(x=df$Var2, y=df$rank,pointwise=df1))
df1
dfa<-filter(df,Var1="A")
dfa<-filter(df,Var1=="A")
df1<-as.matrix(cbind(0,dfa$Var2,dfa$rank),ncol=3)
df2<-as.matrix(cbind(2,dfa$Var2,0),ncol=3)
cobs(x=dfa$Var2, y=dfa$rank,constraint="none",pointwise=df1)
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=df1))
dfa<-filter(df,Var1=="A")
df1<-as.matrix(cbind(0,dfa$Var2,dfa$rank),ncol=3)
df2<-as.matrix(cbind(2,dfa$Var2,0),ncol=3)
plot(cobs(x=dfa$Var2, y=dfa$rank,constraint="none"))
plot(cobs(x=dfa$Var2, y=dfa$rank,constraint="concave"))
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=df1))
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=df2))
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=rbind(df1,df2)))
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=rbind(df1,df2),degree=1))
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=rbind(df1,df2),degree=1),nk.starts=10)
plot(cobs(x=dfa$Var2, y=dfa$rank,pointwise=rbind(df1,df2),degree=1),nk.start=10)
dfa<-filter(df,Var1=="B")
df1<-as.matrix(cbind(0,dfa$Var2,dfa$rank),ncol=3)
df2<-as.matrix(cbind(2,dfa$Var2,0),ncol=3)
cobs(x=dfa$Var2, y=dfa$rank,constraint="none",pointwise=df1)
plot(cobs(x=dfa$Var2, y=dfa$rank,constraint="concave"))
plot(cobs(x=dfa$Var2, y=dfa$rank,constraint="concave"))
plot(cobs(x=dfa$Var2, y=dfa$rank))
dfa<-filter(df,Var1=="C")
df1<-as.matrix(cbind(0,dfa$Var2,dfa$rank),ncol=3)
df2<-as.matrix(cbind(2,dfa$Var2,0),ncol=3)
cobs(x=dfa$Var2, y=dfa$rank,constraint="none",pointwise=df1)
plot(cobs(x=dfa$Var2, y=dfa$rank))
dfa<-filter(df,Var1=="D")
df1<-as.matrix(cbind(0,dfa$Var2,dfa$rank),ncol=3)
df2<-as.matrix(cbind(2,dfa$Var2,0),ncol=3)
#cobs(x=dfa$Var2, y=dfa$rank,constraint="none",pointwise=df1)
plot(cobs(x=dfa$Var2, y=dfa$rank))
ggplot(data=dt[metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:12],],
aes(x=emp.pc,y=hpa12,color=region))+
facet_wrap(~metro)+
geom_point(alpha=0.75)+theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.82)+
#theme_ipsum()+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
strip.text=element_text(size=6),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle="",
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
dlist<-unique(dt$date)
dlist
i
i<-325
ggplot(data=dt[date>=dlist[i],
metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:12],],
aes(x=emp.pc,y=hpa12,color=region))+
facet_wrap(~metro)+
theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.65)+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
strip.text=element_text(size=6),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle=paste("through",as.character(dlist[i],format="%B %Y")),
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
dlist[o]
dlist[i]
ggplot(data=dt[date>=dlist[i] &
metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:12],],
aes(x=emp.pc,y=hpa12,color=region))+
facet_wrap(~metro)+
theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.65)+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
strip.text=element_text(size=6),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle=paste("through",as.character(dlist[i],format="%B %Y")),
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
getwd()
setwd('C:/Users/Leonard/Documents/Data Viz/blog/hpi/')
oopt = ani.options(interval = 0.05)
saveGIF({for (i in 1:N) {
g<-
ggplot(data=dt[date<=dlist[i] &
metro %in% dt[date==max(dt$date),][order(-emp)]$metro[1:12],],
aes(x=emp.pc,y=hpa12,color=region))+
facet_wrap(~metro)+
theme_ipsum()+
geom_hline(yintercept=0,color="black")+
guides(size=F)+
geom_vline(xintercept=0,color="black")+
geom_point(alpha=0.65)+
theme_minimal()+
scale_color_ipsum(name="Region") +
scale_y_continuous(label=percent)+
scale_x_continuous(label=percent)+
theme(panel.grid.major=element_line(color="lightgray"),
panel.grid.minor=element_line(color="lightgray"),
plot.caption=element_text(hjust=0),
strip.text=element_text(size=6),
legend.position="bottom")+
labs(x="Annual percentage change in metro employment",
y="Annual percentage change in metro house prices",
title="Metro area employment and house price growth",
subtitle=paste("through",as.character(dlist[i],format="%B %Y")),
caption="@lenkiefer Source: Freddie Mac House Price Index, U.S. Bureau of Labor Statistics")
print(g)
print(paste(i,"out of",N))
ani.pause()}
for (i in 1:10){
print(g)
ani.pause()}
},movie.name="emp hpa scatter 05 03 2017.gif",ani.width = 650, ani.height = 600)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
