# x axis breaks
xb<-as.numeric(c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T)))
# x axis labels
xlab<-c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T))
if (missing(ylim))
{
# Compute max and min rate
ylim<-c(min(in.dt$rate30,na.rm=T),max(in.dt$rate30,na.rm=T))
}
# Compute max and min rate, last rate
yb<-c(min(in.dt$rate30,na.rm=T),tail(in.dt,1)$rate30,max(in.dt$rate30,na.rm=T))
#####################
####  Make Graph ####
#####################
g<-
ggplot(data=in.dt, aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
text=element_text(family="Palatino Linotype"),
panel.grid.minor = element_blank(),
axis.ticks.length=unit(0.25,"cm")        ) +
geom_point(data=tail(in.dt[rate30>0,],1),color="red",size=3,alpha=0.82)+
#geom_rug(data=tail(in.dt,1),sides="l",color="red",size=1.1)+
geom_segment(aes(x=Inf,xend=Inf,y=max(yb),yend=min(yb)))+
scale_y_continuous(limits=ylim,breaks=yb,position = "right" )+
scale_x_continuous(limits=xlim,breaks=xb,labels=xlab)+
geom_segment(aes(x=min(xb), xend=max(xb),
y=-Inf,yend=-Inf),inherit.aes=FALSE)
return(g)
}
myp(dt[year(date)>2014],xlim=xlim,ylim=ylim)
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
setwd('C:/Users/Leonard/Documents/Data Viz/blog/pmms')
myp<-function (in.dt, xlim="default", ylim="default"){
in.dt<-data.table(in.dt)
if (missing(xlim))
{
# x axis limits
xlim<-as.numeric(c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T)))
}
# x axis breaks
xb<-as.numeric(c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T)))
# x axis labels
xlab<-c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T))
if (missing(ylim))
{
# Compute max and min rate
ylim<-c(min(in.dt$rate30,na.rm=T),max(in.dt$rate30,na.rm=T))
}
# Compute max and min rate, last rate
yb<-c(min(in.dt$rate30,na.rm=T),tail(in.dt,1)$rate30,max(in.dt$rate30,na.rm=T))
#####################
####  Make Graph ####
#####################
g<-
ggplot(data=in.dt, aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
text=element_text(family="Palatino Linotype"),
panel.grid.minor = element_blank(),
axis.ticks.length=unit(0.25,"cm")        ) +
geom_point(data=tail(in.dt[rate30>0,],1),color="red",size=3,alpha=0.82)+
#geom_rug(data=tail(in.dt,1),sides="l",color="red",size=1.1)+
geom_segment(aes(x=Inf,xend=Inf,y=max(yb),yend=min(yb)))+
scale_y_continuous(limits=ylim,breaks=yb,position = "right",labels=round(yb,1) )+
scale_x_continuous(limits=xlim,breaks=xb,labels=xlab)+
geom_segment(aes(x=min(xb), xend=max(xb),
y=-Inf,yend=-Inf),inherit.aes=FALSE)
return(g)
}
myp(dt[year(date)>2014],xlim=xlim,ylim=ylim)
setwd('C:/Users/Leonard/Documents/Data Viz/blog/pmms')
myp<-function (in.dt, xlim="default", ylim="default"){
in.dt<-data.table(in.dt)
if (missing(xlim))
{
# x axis limits
xlim<-as.numeric(c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T)))
}
# x axis breaks
xb<-as.numeric(c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T)))
# x axis labels
xlab<-c(min(in.dt$date,na.rm=T),max(in.dt$date,na.rm=T))
if (missing(ylim))
{
# Compute max and min rate
ylim<-c(min(in.dt$rate30,na.rm=T),max(in.dt$rate30,na.rm=T))
}
# Compute max and min rate, last rate
yb<-c(min(in.dt$rate30,na.rm=T),tail(in.dt,1)$rate30,max(in.dt$rate30,na.rm=T))
#####################
####  Make Graph ####
#####################
g<-
ggplot(data=in.dt, aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
text=element_text(family="Palatino Linotype"),
panel.grid.minor = element_blank(),
axis.ticks.length=unit(0.25,"cm")        ) +
geom_point(data=tail(in.dt[rate30>0,],1),color="red",size=3,alpha=0.82)+
#geom_rug(data=tail(in.dt,1),sides="l",color="red",size=1.1)+
geom_segment(aes(x=Inf,xend=Inf,y=max(yb),yend=min(yb)))+
scale_y_continuous(limits=ylim,breaks=yb,position = "right",labels=round(yb,2) )+
scale_x_continuous(limits=xlim,breaks=xb,labels=xlab)+
geom_segment(aes(x=min(xb), xend=max(xb),
y=-Inf,yend=-Inf),inherit.aes=FALSE)
return(g)
}
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
myf<-function (y){
d.out<-copy(dt2)
d.max<-max(d.out[year(date)<=y]$date,na.rm=T)
r.max<-d.out[date==d.max]$rate30
d.min<-min(d.out[year(date)<=y]$date,na.rm=T)
r.min<-d.out[date==d.min]$rate30
d.out[year(date)>y,rate30:=r.max]
d.out[year(date)>y,date:=d.max]
d.out[year(date)<y-1,rate30:=r.min]
d.out[year(date)<y-1,date:=d.min]
d.out %>% map_if(is.character, as.factor) %>% as.data.frame -> d.out
return(d.out)
}
my.list2<-lapply(c(seq(2011,2017,1),2011),myf)
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
myf<-function (y){
d.out<-copy(dt2)
d.max<-max(d.out[year(date)<=y]$date,na.rm=T)
r.max<-d.out[date==d.max]$rate30
d.min<-min(d.out[year(date)<=y]$date,na.rm=T)
r.min<-d.out[date==d.min]$rate30
d.out[year(date)>y,rate30:=r.max]
d.out[year(date)>y,date:=d.max]
d.out[year(date)<y-1,rate30:=NA]
d.out[year(date)<y-1,date:=NA]
d.out %>% map_if(is.character, as.factor) %>% as.data.frame -> d.out
return(d.out)
}
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
i<-50
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
myf<-function (y){
d.out<-copy(dt2)
d.max<-max(d.out[year(date)<=y]$date,na.rm=T)
r.max<-d.out[date==d.max]$rate30
d.min<-min(d.out[year(date)<=y]$date,na.rm=T)
r.min<-d.out[date==d.min]$rate30
d.out[year(date)>y,rate30:=r.max]
d.out[year(date)>y,date:=d.max]
d.out[year(date)<y-1,rate30:=NA]
d.out[year(date)<y-1,date:=NA]
d.out %>% map_if(is.character, as.factor) %>% as.data.frame -> d.out
return(d.out)
}
myf<-function (y){
d.out<-copy(dt2)
d.max<-max(d.out[year(date)<=y]$date,na.rm=T)
r.max<-d.out[date==d.max]$rate30
d.min<-min(d.out[year(date)<=y]$date,na.rm=T)
r.min<-d.out[date==d.min]$rate30
d.out[year(date)>y,rate30:=r.max]
d.out[year(date)>y,date:=d.max]
d.out[year(date)<(y-1),rate30:=NA]
d.out[year(date)<(y-1),date:=NA]
d.out %>% map_if(is.character, as.factor) %>% as.data.frame -> d.out
return(d.out)
}
myp(myf(2014))
xlim<-c(as.numeric(min(dt2$date)),as.numeric(max(dt2$date)))
ylim<-c(as.numeric(min(dt2$rate30)),as.numeric(max(dt2$rate30)))
my.list2<-lapply(c(seq(2011,2017,1),2011),myf)
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
myf<-function (y){
d.out<-copy(dt2)
d.max<-max(d.out[year(date)<=y]$date,na.rm=T)
r.max<-d.out[date==d.max]$rate30
d.min<-min(d.out[year(date)<=y]$date,na.rm=T)
r.min<-d.out[date==d.min]$rate30
d.out[year(date)>y,rate30:=r.max]
d.out[year(date)>y,date:=d.max]
#d.out[year(date)<(y-1),rate30:=NA]
#d.out[year(date)<(y-1),date:=NA]
d.out %>% map_if(is.character, as.factor) %>% as.data.frame -> d.out
return(d.out)
}
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
my.list2<-lapply(c(seq(2011,2017,1),2011),myf)
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
my.list2<-lapply(c(seq(2010,2017,1),2010),myf)
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
my.list2<-lapply(c(seq(2010,2017,1),2010),myf)
myf2<-function (dd){
d.out<-copy(dt2)
d.max<-max(d.out[date<=dd]$date,na.rm=T)
r.max<-d.out[date==d.max]$rate30
d.min<-min(d.out[date<=dd]$date,na.rm=T)
r.min<-d.out[date==d.min]$rate30
d.out[date>dd,rate30:=r.max]
d.out[date>dd,date:=d.max]
#d.out[year(date)<(y-1),rate30:=NA]
#d.out[year(date)<(y-1),date:=NA]
d.out %>% map_if(is.character, as.factor) %>% as.data.frame -> d.out
return(d.out)
}
dt2[,min(date),by=year]
dt2[,min(date),by=year]$V1
my.list2<-lapply(c(min(dt2$date),dt2[,min(date),by=year]$V1,max(dt2$date) ))
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
my.list2<-lapply(c(min(dt2$date),dt2[,min(date),by=year]$V1,max(dt2$date) ),myf2)
#use tweenr to interploate
tf <- tween_states(my.list2,tweenlength= 3,
statelength=1, ease=rep('cubic-in-out',2),nframes=60)
tf<-data.table(unique(tf)) #convert output into data table
tf
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:max(tf$.frame)) { #loop over frames
g<-
myp(tf[.frame==i],xlim=xlim,ylim=ylim)
print(g)
ani.pause()
print(i)}
},movie.name="tween pmms base v2 feb 11 2017.gif",ani.width = 500, ani.height = 400)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=dt, aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
text=element_text(family="Palatino Linotype"),
panel.grid.minor = element_blank(),
axis.ticks.length=unit(0.25,"cm")        ) +
geom_point(data=tail(dt,1),color="red",size=3,alpha=0.82)+
geom_segment(aes(x=Inf,xend=Inf,y=max(dt$rate30),yend=min(dt$rate30)))+
scale_y_continuous(limits=ylim,  breaks=yb,position = "right" )+
scale_x_continuous(limits=xlim,breaks=xb,labels=xlab)+
geom_segment(aes(x=as.numeric(min(dt$date)), xend=as.numeric(max(dt$date)),
y=-Inf,yend=-Inf),inherit.aes=FALSE)
ggplot(data=dt, aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
text=element_text(family="Palatino Linotype"),
panel.grid.minor = element_blank(),
axis.ticks.length=unit(0.25,"cm")        ) +
geom_point(data=tail(dt,1),color="red",size=3,alpha=0.82)+
geom_segment(aes(x=Inf,xend=Inf,y=max(dt$rate30),yend=min(dt$rate30)))+
scale_y_continuous(limits=ylim,  breaks=yb,position = "left" )+
scale_x_continuous(limits=xlim,breaks=xb,labels=xlab)+
geom_segment(aes(x=as.numeric(min(dt$date)), xend=as.numeric(max(dt$date)),
y=-Inf,yend=-Inf),inherit.aes=FALSE)
ggplot(data=dt, aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
text=element_text(family="Palatino Linotype"),
panel.grid.minor = element_blank(),
axis.ticks.length=unit(0.25,"cm")        ) +
geom_point(data=tail(dt,1),color="red",size=3,alpha=0.82)+
geom_segment(aes(x=-Inf,xend=-Inf,y=max(dt$rate30),yend=min(dt$rate30)))+
scale_y_continuous(limits=ylim,  breaks=yb,position = "left" )+
scale_x_continuous(limits=xlim,breaks=xb,labels=xlab)+
geom_segment(aes(x=as.numeric(min(dt$date)), xend=as.numeric(max(dt$date)),
y=-Inf,yend=-Inf),inherit.aes=FALSE)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=dt2[date<=dd,], aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text=element_text(family="Palatino Linotype"),
axis.ticks.length=unit(0.25,"cm"),  # Ticks out!
# padding for ticks
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")),
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"))
)
myfg<-function(dd){
g<-
ggplot(data=dt2[date<=dd,], aes(x=as.numeric(date),y=rate30,label=rate30))+
geom_line()+theme_bw()+
labs(x="", y="",
title="30-year Fixed Mortgage Rate (%)",
subtitle="weekly average rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.title=element_text(size=18),
plot.caption=element_text(hjust=0),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text=element_text(family="Palatino Linotype"),
axis.ticks.length=unit(0.25,"cm"),  # Ticks out!
# padding for ticks
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")),
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"))
)
return(g)
}
i
dd<-dlist[i]
# Set up limits and labels
xlim<-c(as.numeric(min(dt2$date)),as.numeric(dd))
xlim2<-c(as.numeric(min(dt2$date)),as.numeric(max(dt2$date)))
xlab<-c(min(dt2$date),dd)
ylim2<-c(min(dt2$rate30),max(dt2$rate30))
dt3<-dt2[date<=dd]
ylim<-c(min(dt3$rate30),max(dt3$rate30))
myfg(dd) +
geom_segment(aes(x=-Inf,xend=-Inf,y=max(dt3$rate30),yend=min(dt3$rate30)))+
scale_y_continuous(limits=ylim2,breaks=c(ylim,dt2[date==dd]$rate30))+
geom_segment(data=d, aes(x=as.numeric(min(dt2$date)),
y=-Inf, xend=as.numeric(dd),
yend=-Inf),inherit.aes=FALSE)+
scale_x_continuous(limits=xlim2,breaks=xlim,labels=xlab)+
geom_point(color="red",size=3,alpha=0.82,
aes(x=as.numeric(dd),y=dt2[date==dd]$rate30))+
geom_rug(data=dt2[date==dd],sides="l",color="red",
aes(y=rate30),size=1.1)
dt2<-dt[year(date)>2015]
dd<-dlist[i]
# Set up limits and labels
xlim<-c(as.numeric(min(dt2$date)),as.numeric(dd))
xlim2<-c(as.numeric(min(dt2$date)),as.numeric(max(dt2$date)))
xlab<-c(min(dt2$date),dd)
ylim2<-c(min(dt2$rate30),max(dt2$rate30))
dt3<-dt2[date<=dd]
ylim<-c(min(dt3$rate30),max(dt3$rate30))
dd
N
i<-58
dd<-dlist[i]
# Set up limits and labels
xlim<-c(as.numeric(min(dt2$date)),as.numeric(dd))
xlim2<-c(as.numeric(min(dt2$date)),as.numeric(max(dt2$date)))
xlab<-c(min(dt2$date),dd)
ylim2<-c(min(dt2$rate30),max(dt2$rate30))
dt3<-dt2[date<=dd]
ylim<-c(min(dt3$rate30),max(dt3$rate30))
myfg(dd) +
geom_segment(aes(x=-Inf,xend=-Inf,y=max(dt3$rate30),yend=min(dt3$rate30)))+
scale_y_continuous(limits=ylim2,breaks=c(ylim,dt2[date==dd]$rate30))+
geom_segment(data=d, aes(x=as.numeric(min(dt2$date)),
y=-Inf, xend=as.numeric(dd),
yend=-Inf),inherit.aes=FALSE)+
scale_x_continuous(limits=xlim2,breaks=xlim,labels=xlab)+
geom_point(color="red",size=3,alpha=0.82,
aes(x=as.numeric(dd),y=dt2[date==dd]$rate30))+
geom_rug(data=dt2[date==dd],sides="l",color="red",
aes(y=rate30),size=1.1)
getwd()
dlist<-unique(dt2$date)
N<-length(dlist) #number of dates
oopt = ani.options(interval = 0.2)
saveGIF({for (i in 1:N) {
dd<-dlist[i]
# Set up limits and labels
xlim<-c(as.numeric(min(dt2$date)),as.numeric(dd))
xlim2<-c(as.numeric(min(dt2$date)),as.numeric(max(dt2$date)))
xlab<-c(min(dt2$date),dd)
ylim2<-c(min(dt2$rate30),max(dt2$rate30))
dt3<-dt2[date<=dd]
ylim<-c(min(dt3$rate30),max(dt3$rate30))
g<-
myfg(dd) +
geom_segment(aes(x=-Inf,xend=-Inf,y=max(dt3$rate30),yend=min(dt3$rate30)))+
scale_y_continuous(limits=ylim2,breaks=c(ylim,dt2[date==dd]$rate30))+
geom_segment(data=d, aes(x=as.numeric(min(dt2$date)),
y=-Inf, xend=as.numeric(dd),
yend=-Inf),inherit.aes=FALSE)+
scale_x_continuous(limits=xlim2,breaks=xlim,labels=xlab)+
geom_point(color="red",size=3,alpha=0.82,
aes(x=as.numeric(dd),y=dt2[date==dd]$rate30))+
geom_rug(data=dt2[date==dd],sides="l",color="red",
aes(y=rate30),size=1.1)
print(g)
print(paste(i,"out of",N))
ani.pause()
}
for (i2 in 1:10) {
print(g)
ani.pause()
}
},movie.name="rate_02_11_base_extend2_2017.gif",ani.width = 650, ani.height = 400)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
