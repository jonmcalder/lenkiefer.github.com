) +geom_text(data=tf[month==12 & year>=2000&my.a==1& .frame==i],vjust=1,size=3)
print(gg)
print(i)
ani.pause()
}
for (i2 in 1:5) {
print(gg)
ani.pause()
}
},movie.name="annual job bars tween 1 7 2016.gif",ani.width = 500, ani.height = 300, img.name="image")
install.packages("plotly")
library(plotly)
p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
p
install.packages("flexdashboard")
library(flexdashboard)
?stat_density
x
dfGamma
dfGamma
data.frame(nu75 = rgamma(100, 0.75),
nu1 = rgamma(100, 1),
nu2 = rgamma(100, 2))
dfGamma = data.frame(nu75 = rgamma(100, 0.75),
nu1 = rgamma(100, 1),
nu2 = rgamma(100, 2))
dfGamma = stack(dfGamma)
p <- ggplot(dfGamma, aes(x = values)) +
stat_density(aes(group = ind, color = ind),position="identity",geom="line")
ggplotly(p)
dim1 <- c(rnorm(100, mean=1), rnorm(100, mean=4))
dim2 <- rnorm(200, mean=1)
cat <- factor(c(rep("a", 100), rep("b", 100)))
mydf <- data.frame(cbind(dim2, dim1, cat))
p <- ggplot(data=mydf, aes(x=dim1, y=dim2, colour=as.factor(cat))) +
geom_point() +
stat_density(aes(x=dim1, y=(-2+(..scaled..))),
position="identity", geom="line")
stuff <- ggplot_build(p)
xrange <- stuff[[2]]$ranges[[1]]$x.range  # extract the x range to make the
# new densities align with y-axis
## Get densities of dim2
ds <- do.call(rbind, lapply(unique(mydf$cat), function(lev) {
dens <- with(mydf, density(dim2[cat==lev]))
data.frame(x=dens$y+xrange[1], y=dens$x, cat=lev)
}))
library(ggplot2)
library(plotly)
library(plyr)
library(flexdashboard)
library(tidyverse)
# Make some noisily increasing data
set.seed(955)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = 1:20 + rnorm(20,sd=3),
yvar = 1:20 + rnorm(20,sd=3))
dim1 <- c(rnorm(100, mean=1), rnorm(100, mean=4))
dim2 <- rnorm(200, mean=1)
cat <- factor(c(rep("a", 100), rep("b", 100)))
mydf <- data.frame(cbind(dim2, dim1, cat))
p <- ggplot(data=mydf, aes(x=dim1, y=dim2, colour=as.factor(cat))) +
geom_point() +
stat_density(aes(x=dim1, y=(-2+(..scaled..))),
position="identity", geom="line")
stuff <- ggplot_build(p)
xrange <- stuff[[2]]$ranges[[1]]$x.range  # extract the x range to make the
# new densities align with y-axis
## Get densities of dim2
ds <- do.call(rbind, lapply(unique(mydf$cat), function(lev) {
dens <- with(mydf, density(dim2[cat==lev]))
data.frame(x=dens$y+xrange[1], y=dens$x, cat=lev)
}))
?xrange
xrange
desne
getwd()
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
dt<- read.xlsx('rates.xls',sheetName = 'rates')
?readxl
library(readxl)
?readxl
dt<- read_excel('rates.xls',sheetName = 'rates')
?read_excel
dt<- read_excel('rates.xls',sheet= 'rates')
getwd()
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt
names(dt)
library(plotly)
plot_ly(dt,x=date,y=rate30,type="line")
names(dt)
?plot_ly
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
plot_ly(dt,x=~date,y=~rate30,type="line")
p<-ggplot(data=dt,aes(x=date,y=rate30))+geom_line()
ggplotly(p=ggplot2::last_plot())
?ggplotly
g<-ggplot(data=dt,aes(x=date,y=rate30))+geom_line(color=viridis(10)[8])+
geom_line(linetype=2,aes(x=rate15),color=viridis(10)[4])+theme_minimal()
g
g<-ggplot(data=dt,aes(x=date,y=rate30))+geom_line(color=viridis(10)[8])+
geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+theme_minimal()
g
g<-ggplot(data=subset(dt,year(date)>1990),aes(x=date,y=rate30))+geom_line(color=viridis(10)[8])+
geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+theme_minimal()
g
ggplot(data=subset(dt,year(date)>1990),aes(x=date,y=rate30))+geom_line(color=viridis(10)[8])+
geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+theme_minimal()+
labs(x="",y="",title="30-year and 15-year mortgage rates (%)",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.caption=element_text(hjust=0)<
plot.title=element_text(face="bold",size=16))
g<-
ggplot(data=subset(dt,year(date)>1990),aes(x=date,y=rate30))+geom_line(color=viridis(10)[8])+
geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+theme_minimal()+
labs(x="",y="",title="30-year and 15-year mortgage rates (%)",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=16))
g
ggplotly(g)
?ggplotly
ggplotly(g) %>% rangeslider()
?year
?ggplotly
library(flexdashboard)
dt[,1:4]
dt[,1:4]
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
datatable(dt[,1:4],options=list(pagelength=25))
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
datatable(dt[,1:4],options=list(pagelength=25))
?datatable
datatable(dt[,1:4],options=list(pagelength=25),
colnames=c("Date","30-year Fixed Mortgage (%)","15-year Fixed Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"))
datatable(dt[,1:4],options=list(pagelength=25),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),caption="Weekly Average Mortgage Rates in U.S.")
datatable(dt[,1:4],options=list(pagelength=25),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" ))
)
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
datatable(dt[,1:4],options=list(pagelength=500),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-dt[with(dt, order(-date)), ]
dt[with(dt, order(-date)), ]
dt<-dt[order(-date),]
dt[order(as.Date(dt$date, format="%d/%m/%Y")),]
dt
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-dt[order(as.Date(dt$date, format="%d/%m/%Y")),]
datatable(dt[,1:4],options=list(pagelength=100),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
dt[order(-as.Date(dt$date, format="%d/%m/%Y")),]
dt %>% data.table() %>% order(-date)
dt<-data.table(dt)
dt[-date,]
dt[order(-date),]
dt
dt<-data.table(dt)
dt<-dt[order(-date),]
dt
?as_tibble
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.tibble(dt[order(-date),])
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.tibble(dt[order(-date),])
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.data.frame(dt[order(-date),])
datatable(dt[,1:4],options=list(pagelength=100),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
?datatable
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.data.frame(dt[order(-date),])
datatable(dt[,1:4],options=list(pagelength=25),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),pageLength = 100,
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.data.frame(dt[order(-date),])
datatable(dt[,1:4],options=list(pagelength=25),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
ggplot(data=subset(dt,year(date)>1990),aes(x=date,y=rate51))+geom_line(color=viridis(10)[1])+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="",y="",title="5/1 Hybrid adjustable rate mortgage rates (%)",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.data.frame(dt[order(-date),])
datatable(dt[,1:4],filter = 'top',options=list(pageLength=25),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
?datatable
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.data.frame(dt[order(-date),])
datatable(dt[,1:4],filter = 'top',options=list(pageLength=25,"searching": false),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
setwd("C:/Users/Leonard/Documents/Data Viz/blog/test4")
library(tidyverse)
library(readxl)
library(flexdashboard)
library(viridis)
library(zoo)
library(data.table)
library(plotly)
library(DT)
dt<- read_excel('rates.xlsx',sheet= 'rates')
dt$date<-as.Date(dt$date, format="%m/%d/%Y")
dt<-data.table(dt)
dt<-as.data.frame(dt[order(-date),])
datatable(dt[,1:4],filter = 'top',options=list(pageLength=25,searching=F),
colnames=c("Date","30-year Fixed Rate Mortgage (%)","15-year Fixed Rate Mortgage (%)","5/1 Adjustable Rate Mortgage (%)"),
caption=htmltools::tags$caption(
style = 'caption-side: top; text-align: left;',
htmltools::strong('Weekly Average Mortgage Rates in the US'),
htmltools::br(),htmltools::em("Source: Freddie Mac Primary Mortgage Market Survey" )))
dt
g<-
ggplot(data=subset(dt,year(date)>=2005),aes(x=rate10y,y=rate30y))+geom_point(color=viridis(10)[5])+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="10-year Constant Maturity Treasury Yield (%)",y="30-year Fixed Mortgage Rate 9%)",title="10-year Treasury Yields and Mortgage Rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey, Federal Reserve H.15")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
ggplotly(g)
names(dt)
g<-
ggplot(data=subset(dt,year(date)>=2005),aes(x=rate10y,y=rate30))+geom_point(color=viridis(10)[5],alpha=0.5)+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="10-year Constant Maturity Treasury Yield (%)",y="30-year Fixed Mortgage Rate 9%)",title="10-year Treasury Yields and Mortgage Rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey, Federal Reserve H.15")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
ggplotly(g)
lm(data=dt,rate30~rate10y)
summary(lm(data=dt,rate30~rate10y))
my.out<-lm(data=dt,rate30~rate10y)
library(stargazer)
install.pacakges(stargazer)
install.packages(stargazer)
install.packages("stargazer")
my.out<-lm(data=dt,rate30~rate10y)
library(stargazer)
stargazer(my.out)
summary(lm(data=dt,rate30~rate10y))
my.out<-lm(data=dt,rate30~rate10y)
summary(lm(data=dt,rate30~rate10y))
library(stargazer)
stargazer(my.out)
?stargazer
library(stargazer)
stargazer(my.out,type="html")
library(stargazer)
stargazer(my.out,type="html")
summary(my.out)
my.out
str(my.out)
knitr::kable(summary(my.out))
g<-
ggplot(data=subset(dt,year(date)>=2005),aes(x=rate10y,y=rate30))+geom_point(color=viridis(10)[8],alpha=0.82)+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="10-year Constant Maturity Treasury Yield (%)",y="30-year Fixed Mortgage Rate 9%)",title="10-year Treasury Yields and Mortgage Rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey, Federal Reserve H.15")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
ggplotly(g)
ggplot(data=subset(dt,year(date)>=2005),aes(x=rate10y,y=rate51))+geom_point(color=viridis(10)[5],alpha=0.82)+stat_smooth(method="lm",linetype=2,color="black",fill=NA)+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="10-year Constant Maturity Treasury Yield (%)",y="5/1 Hybrid Adjustable Rate Mortgage Rate 9%)",title="10-year Treasury Yields and Mortgage Rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey, Federal Reserve H.15")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
g<-
ggplot(data=subset(dt,year(date)>=2005),aes(x=rate10y,y=rate30,group=date))+geom_point(color=viridis(10)[8],alpha=0.82)+stat_smooth(method="lm",linetype=2,color="black",fill=NA)+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="10-year Constant Maturity Treasury Yield (%)",y="30-year Fixed Mortgage Rate 9%)",title="10-year Treasury Yields and Mortgage Rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey, Federal Reserve H.15")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
ggplotly(g)
g<-
ggplot(data=subset(dt,year(date)>=2005),aes(x=rate10y,y=rate30,label=date))+geom_point(color=viridis(10)[8],alpha=0.82)+stat_smooth(method="lm",linetype=2,color="black",fill=NA)+
#geom_line(linetype=2,aes(y=rate15),color=viridis(10)[4])+
theme_minimal()+
labs(x="10-year Constant Maturity Treasury Yield (%)",y="30-year Fixed Mortgage Rate 9%)",title="10-year Treasury Yields and Mortgage Rates",
caption="@lenkiefer Source: Freddie Mac Primary Mortgage Market Survey, Federal Reserve H.15")+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=10))
ggplotly(g)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
getwd()
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point(aes(size = pop, color = continent, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
devtools::install_github(“ropensci/plotly”)
devtools::install_github("ropensci/plotly")
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point(aes(size = pop, color = continent, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
library(ggplot2)
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point(aes(size = pop, color = continent, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
library("plotly")
data(gapminder, package = "gapminder")
library(ggplot2)
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point(aes(size = pop, color = continent, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
