"Percent Above/Below Pre-2008 Peak"="hpa.peak",
"Percent Above post-2008 Trough"="hpa.trough"
),
filter = 'top',
class="display compact",
options = list(  pageLength = 50,
width=800,
columnDefs = list(
)))
#set a maximum date with year and month
yy<-2016 #year
mm<-3    #month- march is latest available
#Create the plot, exlude if state = 'US' or state = 'DC', and year < 2000:
g<-
ggplot(data=statedata[state != "US" & state !="DC" & year>1999 & year<=yy], aes(x=date,y=hpi))+
#set theme
theme_minimal()+
#set dates,
#the axis will be tight so we'll only show the year every 4 years and only print the last 2 digits
scale_x_date(labels= date_format("%y"),date_breaks="4 year",
limits = as.Date(c('2000-01-01','2016-03-30'))) +
#set y axis, I prefer a log axis for indices like this
scale_y_log10(limits=c(70,350), breaks=c(75,100,125,150,200,250,350))+
#plot data with black line
geom_line(color="black")  +
#add a marker at teh end
geom_point(data=statedata[state !='US' & state != "DC" & year==yy & month==mm], color="red", alpha=0.7)+
#use the facet feature to plot each state as it's own small plot
facet_wrap(~state, ncol=10) +
# add a horiztonal line at the last data point, helpufl to compare to prior peak
geom_hline(data = statedata[year==yy & month==mm& state !="US" & state !="DC"], aes(yintercept = hpi), linetype=2,alpha=0.8)+
#modify plot features
theme(plot.title=element_text(face="bold",size=12))+
theme(plot.caption=element_text(hjust=0))+
xlab("")+ylab("House price index, log scale")+
#create a subtitle that prints the last date, useful later
labs(caption="@lenkiefer Source: Freddie Mac House Price Index (Dec 2000 = 100, NSA)",
subtitle=paste(as.character(statedata[year==yy & month==mm & state=="US"]$date,format="%b-%Y")),
title="State house price trends")
g
#set a maximum date with year and month
yy<-2016 #year
mm<-9    #month- march is latest available
#Create the plot, exlude if state = 'US' or state = 'DC', and year < 2000:
g<-
ggplot(data=statedata[state !="US.SA" & state !="US.NSA" & state !="DC" & year>1999 & year<=yy], aes(x=date,y=hpi))+
#set theme
theme_minimal()+
#set dates,
#the axis will be tight so we'll only show the year every 4 years and only print the last 2 digits
scale_x_date(labels= date_format("%y"),date_breaks="4 year",
limits = as.Date(c('2000-01-01','2016-03-30'))) +
#set y axis, I prefer a log axis for indices like this
scale_y_log10(limits=c(70,350), breaks=c(75,100,125,150,200,250,350))+
#plot data with black line
geom_line(color="black")  +
#add a marker at teh end
geom_point(data=statedata[state !='US' & state != "DC" & year==yy & month==mm], color="red", alpha=0.7)+
#use the facet feature to plot each state as it's own small plot
facet_wrap(~state, ncol=10) +
# add a horiztonal line at the last data point, helpufl to compare to prior peak
geom_hline(data = statedata[year==yy & month==mm& state !="US.SA" & state !="US.NSA" & state !="DC"], aes(yintercept = hpi), linetype=2,alpha=0.8)+
#modify plot features
theme(plot.title=element_text(face="bold",size=12))+
theme(plot.caption=element_text(hjust=0))+
xlab("")+ylab("House price index, log scale")+
#create a subtitle that prints the last date, useful later
labs(caption="@lenkiefer Source: Freddie Mac House Price Index (Dec 2000 = 100, NSA)",
subtitle=paste(as.character(statedata[year==yy & month==mm & state=="US.SA"]$date,format="%b-%Y")),
title="State house price trends")
g
#set a maximum date with year and month
yy<-2016 #year
mm<-9    #month- march is latest available
#Create the plot, exlude if state = 'US' or state = 'DC', and year < 2000:
g<-
ggplot(data=statedata[state !="US.SA" & state !="US.NSA" & state !="DC" & year>1999 & year<=yy], aes(x=date,y=hpi))+
#set theme
theme_minimal()+
#set dates,
#the axis will be tight so we'll only show the year every 4 years and only print the last 2 digits
scale_x_date(labels= date_format("%y"),date_breaks="4 year",
limits = as.Date(c('2000-01-01','2016-03-30'))) +
#set y axis, I prefer a log axis for indices like this
scale_y_log10(limits=c(70,350), breaks=c(75,100,125,150,200,250,350))+
#plot data with black line
geom_line(color="black")  +
#add a marker at teh end
geom_point(data=statedata[state !="US.SA" & state !="US.NSA" & state != "DC" & year==yy & month==mm], color="red", alpha=0.7)+
#use the facet feature to plot each state as it's own small plot
facet_wrap(~state, ncol=10) +
# add a horiztonal line at the last data point, helpufl to compare to prior peak
geom_hline(data = statedata[year==yy & month==mm& state !="US.SA" & state !="US.NSA" & state !="DC"], aes(yintercept = hpi), linetype=2,alpha=0.8)+
#modify plot features
theme(plot.title=element_text(face="bold",size=12),
plot.caption=element_text(hjust=0),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
xlab("")+ylab("House price index, log scale")+
#create a subtitle that prints the last date, useful later
labs(caption="@lenkiefer Source: Freddie Mac House Price Index (Dec 2000 = 100, NSA)",
subtitle=paste(as.character(statedata[year==yy & month==mm & state=="US.SA"]$date,format="%b-%Y")),
title="State house price trends")
g
#set a maximum date with year and month
yy<-2016 #year
mm<-9    #month- march is latest available
#Create the plot, exlude if state = 'US' or state = 'DC', and year < 2000:
g<-
ggplot(data=statedata[state !="US.SA" & state !="US.NSA" & state !="DC" & year>1999 & year<=yy], aes(x=date,y=hpi))+
#set theme
theme_minimal()+
#set dates,
#the axis will be tight so we'll only show the year every 4 years and only print the last 2 digits
scale_x_date(labels= date_format("%y"),date_breaks="4 year",
limits = as.Date(c('2000-01-01','2016-12-31'))) +
#set y axis, I prefer a log axis for indices like this
scale_y_log10(limits=c(70,350), breaks=c(75,100,125,150,200,250,350))+
#plot data with black line
geom_line(color="black")  +
#add a marker at teh end
geom_point(data=statedata[state !="US.SA" & state !="US.NSA" & state != "DC" & year==yy & month==mm], color="red", alpha=0.7)+
#use the facet feature to plot each state as it's own small plot
facet_wrap(~state, ncol=10) +
# add a horiztonal line at the last data point, helpufl to compare to prior peak
geom_hline(data = statedata[year==yy & month==mm& state !="US.SA" & state !="US.NSA" & state !="DC"], aes(yintercept = hpi), linetype=2,alpha=0.8)+
#modify plot features
theme(plot.title=element_text(face="bold",size=12),
plot.caption=element_text(hjust=0),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
xlab("")+ylab("House price index, log scale")+
#create a subtitle that prints the last date, useful later
labs(caption="@lenkiefer Source: Freddie Mac House Price Index (Dec 2000 = 100, NSA)",
subtitle=paste(as.character(statedata[year==yy & month==mm & state=="US.SA"]$date,format="%b-%Y")),
title="State house price trends")
g
ggplot(data=dm,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("1990-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
dm
names(dm)
dm2
names(dm2)
ggplot(data=dm2,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("1990-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
names(dm2)
ggplot(data=dm,aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.5)+ theme_minimal()+
facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("1990-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
head(dm,3)
ggplot(data=dm,aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.5)+ theme_minimal()+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("1990-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
ggplot(data=dm[year>1999,],aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.5)+ theme_minimal()+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("1990-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
ggplot(data=dm[year>1999,],aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.5)+ theme_minimal()+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("2000-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
ggplot(data=dm[year>1999,],aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.5)+ theme_minimal()+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("2000-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Each line a state",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA)")
ggplot(data=dm[year>1999,],aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.5,size=0.25)+ theme_minimal()+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("2000-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Each line a metro",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA)")
ggplot(data=dm[year>1999,],aes(x=date,y=hpa12,group=metro))+
geom_line(alpha=0.25,size=0.25)+ theme_minimal()+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("2000-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Each line a metro",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA)")
#set a maximum date with year and month
yy<-2016 #year
mm<-9    #month- march is latest available
#Create the plot, exlude if state = 'US' or state = 'DC', and year < 2000:
g<-
ggplot(data=statedata[state !="US.SA" & state !="US.NSA" & state !="DC" & year>1999 & year<=yy], aes(x=date,y=hpi))+
#set theme
theme_minimal()+
#set dates,
#the axis will be tight so we'll only show the year every 4 years and only print the last 2 digits
scale_x_date(labels= date_format("%y"),date_breaks="4 year",
limits = as.Date(c('2000-01-01','2016-12-31'))) +
#set y axis, I prefer a log axis for indices like this
scale_y_log10(limits=c(70,350), breaks=c(75,100,125,150,200,250,350))+
#plot data with black line
geom_line(color="black")  +
#add a marker at teh end
geom_point(data=statedata[state !="US.SA" & state !="US.NSA" & state != "DC" & year==yy & month==mm], color="red", alpha=0.7)+
#use the facet feature to plot each state as it's own small plot
facet_wrap(~state, ncol=10) +
# add a horiztonal line at the last data point, helpufl to compare to prior peak
geom_hline(data = statedata[year==yy & month==mm& state !="US.SA" & state !="US.NSA" & state !="DC"], aes(yintercept = hpi), linetype=2,alpha=0.8)+
#modify plot features
theme(plot.title=element_text(face="bold",size=12),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6),
plot.caption=element_text(hjust=0),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
xlab("")+ylab("House price index, log scale")+
#create a subtitle that prints the last date, useful later
labs(caption="@lenkiefer Source: Freddie Mac House Price Index (Dec 2000 = 100, NSA)",
subtitle=paste(as.character(statedata[year==yy & month==mm & state=="US.SA"]$date,format="%b-%Y")),
title="State house price trends")
g
#set a maximum date with year and month
yy<-2016 #year
mm<-9    #month- march is latest available
#Create the plot, exlude if state = 'US' or state = 'DC', and year < 2000:
g<-
ggplot(data=statedata[state !="US.SA" & state !="US.NSA" & state !="DC" & year>1999 & year<=yy], aes(x=date,y=hpi))+
#set theme
theme_minimal()+
#set dates,
#the axis will be tight so we'll only show the year every 4 years and only print the last 2 digits
scale_x_date(labels= date_format("%y"),date_breaks="4 year",
limits = as.Date(c('2000-01-01','2016-12-31'))) +
#set y axis, I prefer a log axis for indices like this
scale_y_log10(limits=c(70,350), breaks=c(75,100,150,250,350))+
#plot data with black line
geom_line(color="black")  +
#add a marker at teh end
geom_point(data=statedata[state !="US.SA" & state !="US.NSA" & state != "DC" & year==yy & month==mm], color="red", alpha=0.7)+
#use the facet feature to plot each state as it's own small plot
facet_wrap(~state, ncol=10) +
# add a horiztonal line at the last data point, helpufl to compare to prior peak
geom_hline(data = statedata[year==yy & month==mm& state !="US.SA" & state !="US.NSA" & state !="DC"], aes(yintercept = hpi), linetype=2,alpha=0.8)+
#modify plot features
theme(plot.title=element_text(face="bold",size=12),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6),
plot.caption=element_text(hjust=0),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
xlab("")+ylab("House price index, log scale")+
#create a subtitle that prints the last date, useful later
labs(caption="@lenkiefer Source: Freddie Mac House Price Index (Dec 2000 = 100, NSA)",
subtitle=paste(as.character(statedata[year==yy & month==mm & state=="US.SA"]$date,format="%b-%Y")),
title="State house price trends")
g
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)")+
theme(legend.position="none",
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2,2), nrow=3, byrow=TRUE))
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)")+
theme(legend.position="none",
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2), nrow=1, byrow=TRUE))
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2), nrow=1, byrow=TRUE))
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",                                      caption="")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2), nrow=1, byrow=TRUE))
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.title=element_text(size=14),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",                                      caption="")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2), nrow=1, byrow=TRUE))
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.title=element_text(size=14),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.line
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.title=element_text(size=12),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2,2), nrow=3, byrow=TRUE))
g.line<-
ggplot(data=sdata,aes(x=date,y=starts-1500,fill=starts-1500))+  #geom_step(color="gray")+
geom_col(alpha=0.82)+
scale_fill_viridis()+
scale_y_continuous(breaks=seq(-1000,1000,500),labels=seq(500,2500,500),limits=c(-1500,1500))+
theme_minimal()+
labs(x="",y="",title="Housing Starts (Ths. SAAR)",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.title=element_text(size=12),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"))+
scale_x_date(date_breaks="10 years",date_labels="%Y")
g.tile<-
ggplot(data=sdata,aes(x=reorder(as.character(date,format="%b"),month),y=factor(yearf),fill=starts))+
geom_tile(alpha=0.82,color="white")+
scale_fill_viridis()+theme_minimal()+labs(x="",y="",
caption="@lenkiefer Source: Census/HUD")+
theme(legend.position="none",plot.caption=element_text(hjust=0))+
theme(axis.text.y=element_text(size=6),
plot.background = element_rect(fill = "#fffff8",colour = "#fffff8"),
axis.text.x=element_text(size=6))
multiplot(g.line,g.tile,layout=matrix(c(1,2), nrow=1, byrow=TRUE))
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
