breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")
ggplot() +
geom_polygon(data = circlef, aes(x = long, y = lat, group = group),
fill = '#eaeaea') +
geom_map(data = dfw_averages, map = dfwf,           aes(fill = log(Zhvi), map_id = RegionName),alpha=0.75) +
geom_path(data = roadsf, aes(x = long, y = lat, group = group), color = 'white',
size = 0.5) +
geom_text(data = dfw_cities@data, aes(x = long, y = lat, label = NAME),
color = 'black', fontface = 'bold') +
theme_map( base_size = 14) +
coord_equal() +
theme(legend.position = 'right',
legend.key = element_blank()) +
scale_fill_viridis(name="",discrete=F,option="D",end=0.95,direction=-1,
limits=c(log(10000),log(1e7)),
breaks=c(log(10000),log(100000),log(1e7)),
labels=c("$10,000","$100,000","$1,000,000"))+
labs(subtitle="Median Home Value ($, log scale)",
title="Distribution of estimated home values by ZIP Code",
caption="@lenkiefer Source: Zillow Home Value Index for June 2016 (as of 8/20/2016)")    +
theme(plot.caption=element_text(hjust=0))
?bind_rows
zips
over
?over
?counties
st.list
st.list
zdata
unique(zdata$State)
st.list<-unique(zdata$State) #list of all states
i<-4
ctys <- counties(st.list[i], cb = TRUE)
ctys
theme(plot.subtitle=element_text(color="red"))+
#labels:
labs(y="Percent of homeowners underwater", x="",
caption="@lenkiefer Source: Zillow Negative Equity Report (2016Q1)",
subtitle=unique(dtf[.frame==i]$RegionName),
title="Negative Equity by State")
print(g)
ani.pause()
library(readxl)
library(data.table)
library(dplyr)
library(tidyr)
library('ggbeeswarm')
library(viridis)
library(ggplot2)
library(scales)
library(ggthemes)
library(tweenr)
library(purrr)
library(animation)
library(acs)
library(dplyr)
library(reshape2)
library(stringr)
library(ggplot2)
library(ggthemes)
library(ggalt)
library(scales)
library(rgeos)
library(maptools)
library(albersusa)
library(broom)
library(ineq) #used for concentration indices
path<-C:\Users\Leonard\Documents\Data Viz\blog\pophousinghpa
path<-"C:/Users/Leonard/Documents/Data Viz/blog/geo/"
popDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="c2010_hist_pops")
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
popDF<-popDF %>% gather(year.of,"pop",5:27)
popDF<-mutate(popDF,year=ifelse(substr(year.of,1,1)=="e",substr(year.of,5,9),substr(year.of,4,8)))
popDF<-data.table(popDF)
popDF<-rename(popDF,fips=GEOID10 )
dt<-data.table(popDF)
dt[,sum(pop),by=year]
states<-usa_composite()
smap<-fortify(states,region="fips_state")
smap.all<-smap
counties <- counties_composite()
#get data:
counties@data <- left_join(counties@data, popDF.i, by = "fips")
counties@data <- left_join(counties@data, shareDF.i, by = "fips")
cmap <- fortify(counties_composite(), region="fips")
cmap$state<-substr(cmap$id,1,2)
cmap$county<-substr(cmap$id,3,5)
cmap$fips<-paste0(cmap$state,cmap$county)
cmap.all<-cmap
mycaption<-"@lenkiefer Source: Schroeder, Jonathan P. (2016). Historical Population Estimates for 2010 U.S. States, Counties and Metro/Micro Areas, 1790-2010. Retrieved from the Data Repository for the University of Minnesota, http://doi.org/10.13020/D6XW2H."
mycaption <- paste0(strwrap(mycaption, 130), sep="", collapse="\n")
#total counts map:
ggplot() +
geom_map(data = cmap.all, map = cmap.all,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.05, fill = NA) +
geom_map(data = counties@data, map = cmap.all,
aes(fill =log(pop), map_id = fips),
color = NA) +
geom_map(data = smap.all, map = smap.all,
aes(x = long, y = lat, map_id = id),
color = "gray", size = .25, fill = NA) +
theme_map( base_size = 12) +
theme(plot.title=element_text( size = 16, margin=margin(b=10))) +
theme(plot.subtitle=element_text(size = 14, margin=margin(b=-20))) +
theme(plot.caption=element_text(size = 9, margin=margin(t=-15))) +
coord_proj(us_laea_proj) +   labs(title="",subtitle="" ) +
scale_fill_viridis(name = "Population", discrete=F,option="D",end=0.95,direction=-1)+
theme(legend.position = "none") +theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10)))+
labs(x="Population in 2014 (log scale)",y="",
#subtitle="Each dot represents 1 county",
title="County Population Distribution",
caption="@lenkiefer Source: TBD")
y.list<-unique(popDF$year)
yy<-y.list[1]
yy<-"1900"
popDF.i<-subset(popDF,year==yy)
shareDF.i<-subset(shareDF,year==yy)
#shareDF.i<-shareDF.i[,c(fips,share)]
shareDF.i<-data.table(shareDF.i)[,list(fips,share)]
counties <- counties_composite()
#get data:
counties@data <- left_join(counties@data, popDF.i, by = "fips")
counties@data <- left_join(counties@data, shareDF.i, by = "fips")
shareDF
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
head(shareDF)
library(dplyr)
shareDF<-rename(shareDF,fips=GEOID10 )
names(shareDF)
rename(shareDF,fips=GEOID10)
rename(shareDF,fips=GEOID10)
shareDF<-read_excel(paste0(path,"county2010_hist_pops.xlsx"),sheet="national_shares")
shareDF<-shareDF %>% gather(year.of,"share",5:27)
shareDF<-mutate(shareDF,year=substr(year.of,6,10))
#shareDF<-data.table(shareDF)
shareDF<-rename(shareDF,fips=GEOID10 )
names(shareDF)
?rename
popDF<-popDF %>% gather(year.of,"pop",5:27)
popDF<-mutate(popDF,year=ifelse(substr(year.of,1,1)=="e",substr(year.of,5,9),substr(year.of,4,8)))
popDF<-data.table(popDF)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
getwd()
gdata<-data.table(read_excel("data/chartbook aug 2016.xlsx",sheet="gdpc"))
gdata$date<-as.Date(gdata$date, format="%m/%d/%Y")
gdata[, avgc:=mean(value), by=var]
gdata<-gdata[order(date,avgc),]
gdata[Total !="total", end:=cumsum(value), by=date]
gdata[Total=="total", end:=0, by=date]
gdata[,start:=shift(end,1,fill=0), by=date]
gdata[,id:=.I]
gdata[,id:=1:.N,,by=date]
gdata[, myjust:=ifelse(value<0,1,0)]
gdata[, lp:=ifelse(Total=="total",start,end)]
gdata[,dlabel:=factor(paste(year,"Q",quarter,sep=""))]
gdata[,cont:=factor(cont)]
gdata[,var:=factor(var)]
gdata$var<-factor(gdata$var, levels=gdata$var[order(gdata$avgc)])
gdata.plot<-gdata[year==2016]
gdata.plot[,date.label:=paste0(year,"Q",quarter)]
gdata
ggplot(data=gdata[year>1980 & cont!="total",])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=1.1)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
source('code/multiplot.R')
# source code for recession bars see: https://www.r-bloggers.com/use-geom_rect-to-add-recession-bars-to-your-time-series-plots-rstats-ggplot/
source("code/recessions.R")
# function for combining graphs see: http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/
source('code/multiplot.R')
# source code for recession bars see: https://www.r-bloggers.com/use-geom_rect-to-add-recession-bars-to-your-time-series-plots-rstats-ggplot/
source("code/recessions.R")
###### GDP contributions Charts @gdp ######
gdata<-data.table(read_excel("data/chartbook aug 2016.xlsx",sheet="gdpc"))
gdata$date<-as.Date(gdata$date, format="%m/%d/%Y")
gdata[, avgc:=mean(value), by=var]
gdata<-gdata[order(date,avgc),]
gdata[Total !="total", end:=cumsum(value), by=date]
gdata[Total=="total", end:=0, by=date]
gdata[,start:=shift(end,1,fill=0), by=date]
gdata[,id:=.I]
gdata[,id:=1:.N,,by=date]
gdata[, myjust:=ifelse(value<0,1,0)]
gdata[, lp:=ifelse(Total=="total",start,end)]
gdata[,dlabel:=factor(paste(year,"Q",quarter,sep=""))]
gdata[,cont:=factor(cont)]
gdata[,var:=factor(var)]
gdata$var<-factor(gdata$var, levels=gdata$var[order(gdata$avgc)])
gdata.plot<-gdata[year==2016]
gdata.plot[,date.label:=paste0(year,"Q",quarter)]
ggplot(data=gdata[year>1980 & cont!="total",])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=1.1)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
d.list2<-unique(gdata[year>1980 & cont!="total",]$date)
N<-length(d.list2)
i
i<-5
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=1.1)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:N) {
g<-
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
print(g)
print(i)
ani.pause()  }
for (i2 in 1:10) {
print(g)
ani.pause()  }
},movie.name="gdp contributions squiggle.gif",ani.width = 800, ani.height = 450)
ggplot(data=gdata[year>1980 & cont!="total",])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=1.1)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
gdata$var<-factor(gdata$var, levels=gdata$var[order(gdata$avgc)])
gdata<-data.table(read_excel("data/chartbook aug 2016.xlsx",sheet="gdpc"))
gdata$date<-as.Date(gdata$date, format="%m/%d/%Y")
gdata[, avgc:=mean(value), by=var]
gdata<-gdata[order(date,avgc),]
gdata[Total !="total", end:=cumsum(value), by=date]
gdata[Total=="total", end:=0, by=date]
gdata[,start:=shift(end,1,fill=0), by=date]
gdata[,id:=.I]
gdata[,id:=1:.N,,by=date]
gdata[, myjust:=ifelse(value<0,1,0)]
gdata[, lp:=ifelse(Total=="total",start,end)]
gdata[,dlabel:=factor(paste(year,"Q",quarter,sep=""))]
gdata[,cont:=factor(cont)]
gdata[,var:=factor(var)]
gdata$var<-factor(gdata$var, levels=gdata$var[order(gdata$avgc)])
gdata$var
gdata[order(avgc),]
gdata[order(avgc),]
unique(gdata$var)
gdata<-data.table(read_excel("data/chartbook aug 2016.xlsx",sheet="gdpc"))
gdata$date<-as.Date(gdata$date, format="%m/%d/%Y")
gdata[, avgc:=mean(value), by=var]
gdata<-gdata[order(date,avgc),]
gdata[Total !="total", end:=cumsum(value), by=date]
gdata[Total=="total", end:=0, by=date]
gdata[,start:=shift(end,1,fill=0), by=date]
gdata[,id:=.I]
gdata[,id:=1:.N,,by=date]
gdata[, myjust:=ifelse(value<0,1,0)]
gdata[, lp:=ifelse(Total=="total",start,end)]
gdata[,dlabel:=factor(paste(year,"Q",quarter,sep=""))]
gdata[,cont:=factor(cont)]
gdata[,var:=factor(var)]
gdata[order(avgc),]
gdata$var
gdata<-data.table(read_excel("data/chartbook aug 2016.xlsx",sheet="gdpc"))
gdata$date<-as.Date(gdata$date, format="%m/%d/%Y")
gdata[, avgc:=mean(value), by=var]
gdata<-gdata[order(date,avgc),]
gdata[Total !="total", end:=cumsum(value), by=date]
gdata[Total=="total", end:=0, by=date]
gdata[,start:=shift(end,1,fill=0), by=date]
gdata[,id:=.I]
gdata[,id:=1:.N,,by=date]
gdata[, myjust:=ifelse(value<0,1,0)]
gdata[, lp:=ifelse(Total=="total",start,end)]
gdata[,dlabel:=factor(paste(year,"Q",quarter,sep=""))]
gdata[,cont:=factor(cont)]
#gdata[,var:=factor(var)]
gdata[order(avgc),]
gdata$var<-factor(gdata$var, levels=unique(gdata$var))
gdata$var
gdata$var<-factor(gdata$var, levels=unique(gdata[order(avgc),]$var))
levels(gdata$var)
gdata$var<-factor(gdata$var, levels=unique(gdata[order(-avgc),]$var))
lev
levels(gdata$var)
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
scale_x_date(xlim=c(min(gdata$date),max(gdata$date)))+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
c(min(gdata$date),max(gdata$date)
)
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
scale_x_date(xlim=c(min(gdata[year>1980,]$date),max(gdata$date)))+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
g<-
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
scale_x_date(limits=c(min(gdata[year>1980,]$date),max(gdata$date)))+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
g
d.list2<-unique(gdata[year>1980 & cont!="total",]$date)
N<-length(d.list2)
oopt = ani.options(interval = 0.1)
saveGIF({for (i in 1:N) {
g<-
ggplot(data=gdata[year>1980 & cont!="total" & date<=d.list2[i],])+facet_wrap(~var)+
theme_minimal()+ theme(plot.title=element_text(size=12))+
scale_color_viridis(discrete=T,direction=-1,end=0.85)+
theme(plot.caption=element_text(hjust=0,vjust=1,margin=margin(t=10),size=10))+
theme(legend.justification=c(0,0), legend.position="none")+
geom_rect(data=subset(recessions.df,Peak>="1980-01-01"),
aes(xmin=Peak, xmax=Trough, ymin=-Inf, ymax=+Inf), fill="gray", alpha=0.35)+
geom_line(aes(x=date,y=value,color=var),size=0.75)+
scale_x_date(limits=c(min(gdata[year>1980,]$date),max(gdata$date)))+
labs(x="",y="",title="Contributions to Percent Change in Real Gross Domestic Product",
subtitle="Seasonally adjusted at annual rates",
caption="@lenkiefer Source: U.S. Bureau of Economic Analysis, Table 1.1.2, accessed 8/26/2016.\nShaded area NBER Recession dates")
print(g)
print(i)
ani.pause()  }
for (i2 in 1:10) {
print(g)
ani.pause()  }
},movie.name="gdp contributions squiggle.gif",ani.width = 800, ani.height = 450)
