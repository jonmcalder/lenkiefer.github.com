subtitle=s.list[m])
m.list[5]
s.list[5]
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle="Dotted line corrspond to forecasts from autoregressive model")
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.2,0.3))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle="Dotted line corrspond to forecasts from autoregressive model")
d
D
d.list
d.list[11]
setwd('C:/Users/Leonard/Documents/Data Viz/blog/recursive')
saveGIF(
for (m in 5:5){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.2,0.3))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle="Dotted line corrspond to forecasts from autoregressive model")
print(g)
print(d)
print(m)
ani.pause()  }
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.2,0.3))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle="Dotted line corrspond to forecasts from autoregressive model")
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in 5:5){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.2,0.3))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle="Dotted line corrspond to forecasts from autoregressive model")
print(g)
print(d)
print(m)
ani.pause()  }
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.2,0.3))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corrspond to forecasts from autoregressive model fit on data through Sep.",year(d.list[d]))
)
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.25,0.25))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corrspond to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in 5:5){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.25,0.25))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
print(g)
print(d)
print(m)
ani.pause()  }
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in 5:5){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.25,0.25))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
print(g)
print(d)
print(m)
ani.pause()
for (i in 1:10)
print(t)
ani.pause()}
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in 5:5){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.25,0.25))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
print(g)
print(d)
print(m)
ani.pause()}
for (i in 1:10){
print(t)
ani.pause()}
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in 5:5){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.25,0.25))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
print(g)
print(d)
print(m)
ani.pause()}
for (i in 1:10){
print(g)
ani.pause()}
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
ggplot(data=d.state[month==9 & date<=d.list[d] ,],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] ),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=s.list[m])
st.list
s.list
s.list[c(5,10)]
copy.Clipboard(s.list)
write.Clipboard(s.list)
Clipboard.write(s.list)
s.list[12]
s.list[35]
View(s.list)
s.list(c(5,9,21))
s.list[c(5,9,21)]
s.list[c(5,9,22)]
s.list[c(5,9,22,33)]
s.list[c(5,9,22,33,35)]
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in c(5,9,22,33,35)){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.25,0.25))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
print(g)
print(d)
print(m)
ani.pause()}
for (i in 1:10){
print(g)
ani.pause()}
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
summary(d.state[month==9 & date<=d.list[d] & state==s.list[m],])
summary(d.state[month==9 & date<=d.list[d] & state %in% s.list[c(5,9,22,33,35)],])
saveGIF(
for (m in c(5,9,22,33,35)){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.3,0.4))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])))
print(g)
print(d)
print(m)
ani.pause()}
for (i in 1:10){
print(g)
ani.pause()}
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
mycaption<-"@lenkiefer Source: Freddie Mac House Price Index. Uses year-over-year percentage change in index (HPA) in September of year from 1976 forward. Forecasts based on AR(2) model fit to HPA."
mycaption <- paste0(strwrap(mycaption, 120), sep="", collapse="\n")
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.3,0.4))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])),
caption=mycaption )
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.3,0.4))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])),
caption=mycaption )+
theme(plot.caption=element_text(hjust=0))
oopt = ani.options(interval = 0.15)
saveGIF(
for (m in c(5,9,22,33,35)){
g<-ggplot()
for (d in 11:D){
g<-
ggplot(data=d.state[month==9 & date<=d.list[d] & state==s.list[m],],aes(x=date,y=hpa12))+geom_line(size=1.2)+
geom_line(data=filter(f.data,date.f<=d.list[d] & date.f>=d.list[11] & state==s.list[m]),
aes(x=mod.date,y=mod.hpa,group=date.f,color=factor(date.f)),linetype=2,size=1.05)  +
facet_wrap(~state  )+
scale_color_discrete(name="Forecast horizon")+
scale_y_continuous(label=percent)+
theme_minimal()+theme(legend.position="none")+
coord_cartesian(xlim=c(min(d.list[11]),max(d.list)+years(4)),ylim=c(-0.3,0.4))+
labs(x="",y="",title="House Price Percent Change (year-over-year in September)",
subtitle=paste("Dotted line corresponds to forecasts from autoregressive model fit on data through Sep.",year(d.list[d])),
caption=mycaption )+
theme(plot.caption=element_text(hjust=0))
print(g)
print(d)
print(m)
ani.pause()}
for (i in 1:10){
print(g)
ani.pause()}
},movie.name="hpi tentacles.gif",ani.width = 800, ani.height = 450)
ggplot(data=d.metro,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
#facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"))+
scale_y_continuous(label=percent)+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros",
subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
KnitPost <- function(site.path='/pathToYourBlog/', overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "img/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache/") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
library("knitr")
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=TRUE, overwriteOne=NULL)
#KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=FALSE, overwriteOne=4)
#brocks::htmlwidgets_deps(a)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
d.metro
ggplot(data=d.metro,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
#facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"))+
scale_y_continuous(label=percent)+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros",
subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
region<-fread("data/region.txt")
reg.list<-unique(region[order(region),]$region) #list of regions
d.metro<-merge(d.metro,region,by="statecode")
d.metro[, hpa12.rmin:=quantile(hpa12,0,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r5:=quantile(hpa12,.05,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r25:=quantile(hpa12,.25,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r50:=quantile(hpa12,.5,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r75:=quantile(hpa12,.75,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r95:=quantile(hpa12,.95,na.rm=T),by=c("region","date")]
d.metro[, hpa12.rmax:=quantile(hpa12,1,na.rm=T),by=c("region","date")]
# set up statecode for primary state, first 2 digits after column in metro name
d.metro[,statecode:=substr(regmatches(metro,regexec(", +[A-Z][A-Z]",metro)),3,4)]
d.metro<-merge(d.metro,region,by="statecode")
d.metro[, hpa12.rmin:=quantile(hpa12,0,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r5:=quantile(hpa12,.05,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r25:=quantile(hpa12,.25,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r50:=quantile(hpa12,.5,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r75:=quantile(hpa12,.75,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r95:=quantile(hpa12,.95,na.rm=T),by=c("region","date")]
d.metro[, hpa12.rmax:=quantile(hpa12,1,na.rm=T),by=c("region","date")]
d.metro
d.metro[,hpa:=c(NA,((1+diff(hpi)/hpi))^12)-1,by=state]
d.metro[,hpa12:=c(rep(NA,12),((1+diff(hpi,12)/hpi))^1)-1,by=state]
d.metro[,hpa3:=c(rep(NA,12),((1+diff(hpi,3)/hpi))^4)-1,by=state]
#create lags of state
d.metro[, hpi12 :=  shift(hpi,12), by=state]
#compute rolling min/max
d.metro[, hpi12min:=rollapply(hpi, 12, min,fill=NA, na.rm=FALSE,align='right'), by=state]
d.metro[, hpi12max:=rollapply(hpi, 12, max,fill=NA, na.rm=FALSE,align='right'), by=state]
head(d.metro)
# set up statecode for primary state, first 2 digits after column in metro name
d.metro[,statecode:=substr(regmatches(metro,regexec(", +[A-Z][A-Z]",metro)),3,4)]
d.metro
d.metro[,hpa:=c(NA,((1+diff(hpi)/hpi))^12)-1,by=state]
d.metro[,hpa12:=c(rep(NA,12),((1+diff(hpi,12)/hpi))^1)-1,by=state]
d.metro[,hpa3:=c(rep(NA,12),((1+diff(hpi,3)/hpi))^4)-1,by=state]
d.metro <- fread("data/fmhpi2016q3metro.txt")
d.metro$date<-as.Date(d.metro$date, format="%m/%d/%Y")
#Now uses some data table caclulations to compute percent changes in house prices by state/metro
d.metro[,hpa:=c(NA,((1+diff(hpi)/hpi))^12)-1,by=metro]
d.metro[,hpa12:=c(rep(NA,12),((1+diff(hpi,12)/hpi))^1)-1,by=metro]
d.metro[,hpa3:=c(rep(NA,12),((1+diff(hpi,3)/hpi))^4)-1,by=metro]
#create lags of state
d.metro[, hpi12 :=  shift(hpi,12), by=metro]
#compute rolling min/max
d.metro[, hpi12min:=rollapply(hpi, 12, min,fill=NA, na.rm=FALSE,align='right'), by=metro]
d.metro[, hpi12max:=rollapply(hpi, 12, max,fill=NA, na.rm=FALSE,align='right'), by=metro]
head(d.metro)
# set up statecode for primary state, first 2 digits after column in metro name
d.metro[,statecode:=substr(regmatches(metro,regexec(", +[A-Z][A-Z]",metro)),3,4)]
#load file with regions
region<-fread("data/region.txt")
reg.list<-unique(region[order(region),]$region) #list of regions
d.metro<-merge(d.metro,region,by="statecode")
d.metro[, hpa12.rmin:=quantile(hpa12,0,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r5:=quantile(hpa12,.05,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r25:=quantile(hpa12,.25,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r50:=quantile(hpa12,.5,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r75:=quantile(hpa12,.75,na.rm=T),by=c("region","date")]
d.metro[, hpa12.r95:=quantile(hpa12,.95,na.rm=T),by=c("region","date")]
d.metro[, hpa12.rmax:=quantile(hpa12,1,na.rm=T),by=c("region","date")]
d.metro
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=d.metro,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
#facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"))+
scale_y_continuous(label=percent)+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros",
subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
names(d.metro)
ggplot(data=d.metro,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"))+
scale_y_continuous(label=percent)+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros",
subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
d.metro <- fread("data/fmhpi2016q3metro.txt")
d.metro
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
ggplot(data=d.metro,aes(x=date,fill=region,color=region))+
geom_ribbon(aes(ymin=hpa12.rmin,ymax=hpa12.r5),alpha=0.1)+
geom_ribbon(aes(ymin=hpa12.r5,ymax=hpa12.r25),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r25,ymax=hpa12.r75),alpha=0.75)+
geom_ribbon(aes(ymin=hpa12.r75,ymax=hpa12.r95),alpha=0.5)+
geom_ribbon(aes(ymin=hpa12.r95,ymax=hpa12.rmax),alpha=0.1)+
geom_line(aes(y=hpa12.r50))+ theme_minimal()+
facet_wrap(~region)+
theme(legend.position="none",plot.caption=element_text(hjust=0),
plot.subtitle=element_text(face="italic"))+
scale_y_continuous(label=percent)+
coord_cartesian(xlim=c(as.Date("1990-01-01"),as.Date("2016-12-31")))+
labs(x="",y="Annual House Price Percent Change",title="Distribution of year-over-year house price growth across metros", subtitle="Black line median metro, central region 25th to 75th percentiles,\nlighter regions are 5th to 25th (75th to 95th) and min to 5th (95th to max)",
caption="@lenkiefer Source: Freddie Mac House Price Index (NSA), metros assigned to region based on primary state.")
library(animate)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
KnitPost(site.path="C:/Users/Leonard/Documents/webpage/live/lenkiefer.github.com/", overwriteAll=T, overwriteOne=NULL)
